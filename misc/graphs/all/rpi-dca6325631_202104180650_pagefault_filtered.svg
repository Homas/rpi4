<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="323" onload="init(evt)" viewBox="0 0 1200 323" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="323.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >rpi-dca6325631_SNAPSHOT_20210418-0646_pagefault.f</text>
<text id="details" x="10.00" y="306" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="306" > </text>
<g id="frames">
<g >
<title>wait_for_completion_timeout (1 samples, 6.67%)</title><rect x="88.7" y="70" width="78.6" height="10.0" fill="rgb(234,125,8)" rx="2" ry="2" />
<text  x="91.67" y="78" >wait_for_..</text>
</g>
<g >
<title>do_epoll_wait (1 samples, 6.67%)</title><rect x="954.0" y="169" width="78.7" height="10.0" fill="rgb(243,5,45)" rx="2" ry="2" />
<text  x="957.00" y="177" >do_epoll_..</text>
</g>
<g >
<title>[dnsmasq] (1 samples, 6.67%)</title><rect x="10.0" y="235" width="78.7" height="10.0" fill="rgb(206,124,5)" rx="2" ry="2" />
<text  x="13.00" y="243" >[dnsmasq]</text>
</g>
<g >
<title>[libc.so] (1 samples, 6.67%)</title><rect x="10.0" y="246" width="78.7" height="10.0" fill="rgb(211,20,25)" rx="2" ry="2" />
<text  x="13.00" y="254" >[libc.so]</text>
</g>
<g >
<title>dnsmasq (1 samples, 6.67%)</title><rect x="10.0" y="268" width="78.7" height="10.0" fill="rgb(234,100,47)" rx="2" ry="2" />
<text  x="13.00" y="276" >dnsmasq</text>
</g>
<g >
<title>work_pending (1 samples, 6.67%)</title><rect x="10.0" y="202" width="78.7" height="10.0" fill="rgb(234,18,2)" rx="2" ry="2" />
<text  x="13.00" y="210" >work_pend..</text>
</g>
<g >
<title>el0_svc (1 samples, 6.67%)</title><rect x="482.0" y="202" width="78.7" height="10.0" fill="rgb(239,33,6)" rx="2" ry="2" />
<text  x="485.00" y="210" >el0_svc</text>
</g>
<g >
<title>ep_poll (1 samples, 6.67%)</title><rect x="954.0" y="158" width="78.7" height="10.0" fill="rgb(209,176,35)" rx="2" ry="2" />
<text  x="957.00" y="166" >ep_poll</text>
</g>
<g >
<title>el0_svc_handler (1 samples, 6.67%)</title><rect x="482.0" y="191" width="78.7" height="10.0" fill="rgb(207,89,24)" rx="2" ry="2" />
<text  x="485.00" y="199" >el0_svc_h..</text>
</g>
<g >
<title>schedule (1 samples, 6.67%)</title><rect x="954.0" y="114" width="78.7" height="10.0" fill="rgb(253,188,28)" rx="2" ry="2" />
<text  x="957.00" y="122" >schedule</text>
</g>
<g >
<title>schedule (1 samples, 6.67%)</title><rect x="10.0" y="169" width="78.7" height="10.0" fill="rgb(244,145,36)" rx="2" ry="2" />
<text  x="13.00" y="177" >schedule</text>
</g>
<g >
<title>[libubox.so.20210302] (1 samples, 6.67%)</title><rect x="482.0" y="224" width="78.7" height="10.0" fill="rgb(209,106,1)" rx="2" ry="2" />
<text  x="485.00" y="232" >[libubox...</text>
</g>
<g >
<title>kthread (1 samples, 6.67%)</title><rect x="403.3" y="246" width="78.7" height="10.0" fill="rgb(242,92,54)" rx="2" ry="2" />
<text  x="406.33" y="254" >kthread</text>
</g>
<g >
<title>kworker/3:2-eve (1 samples, 6.67%)</title><rect x="403.3" y="268" width="78.7" height="10.0" fill="rgb(229,186,19)" rx="2" ry="2" />
<text  x="406.33" y="276" >kworker/3..</text>
</g>
<g >
<title>[unknown] (1 samples, 6.67%)</title><rect x="1111.3" y="257" width="78.7" height="10.0" fill="rgb(253,102,23)" rx="2" ry="2" />
<text  x="1114.33" y="265" >[unknown]</text>
</g>
<g >
<title>[unknown] (1 samples, 6.67%)</title><rect x="482.0" y="257" width="78.7" height="10.0" fill="rgb(216,47,43)" rx="2" ry="2" />
<text  x="485.00" y="265" >[unknown]</text>
</g>
<g >
<title>swapper (4 samples, 26.67%)</title><rect x="639.3" y="268" width="314.7" height="10.0" fill="rgb(243,21,32)" rx="2" ry="2" />
<text  x="642.33" y="276" >swapper</text>
</g>
<g >
<title>__arm64_sys_epoll_pwait (1 samples, 6.67%)</title><rect x="482.0" y="180" width="78.7" height="10.0" fill="rgb(222,176,42)" rx="2" ry="2" />
<text  x="485.00" y="188" >__arm64_s..</text>
</g>
<g >
<title>[libc.so] (1 samples, 6.67%)</title><rect x="954.0" y="213" width="78.7" height="10.0" fill="rgb(239,146,3)" rx="2" ry="2" />
<text  x="957.00" y="221" >[libc.so]</text>
</g>
<g >
<title>schedule (1 samples, 6.67%)</title><rect x="324.7" y="224" width="78.6" height="10.0" fill="rgb(224,31,43)" rx="2" ry="2" />
<text  x="327.67" y="232" >schedule</text>
</g>
<g >
<title>do_futex (1 samples, 6.67%)</title><rect x="1111.3" y="147" width="78.7" height="10.0" fill="rgb(214,124,30)" rx="2" ry="2" />
<text  x="1114.33" y="155" >do_futex</text>
</g>
<g >
<title>schedule (1 samples, 6.67%)</title><rect x="1032.7" y="136" width="78.6" height="10.0" fill="rgb(253,86,28)" rx="2" ry="2" />
<text  x="1035.67" y="144" >schedule</text>
</g>
<g >
<title>clk_change_rate (1 samples, 6.67%)</title><rect x="88.7" y="136" width="78.6" height="10.0" fill="rgb(207,163,31)" rx="2" ry="2" />
<text  x="91.67" y="144" >clk_chang..</text>
</g>
<g >
<title>__cpufreq_driver_target (1 samples, 6.67%)</title><rect x="88.7" y="191" width="78.6" height="10.0" fill="rgb(234,227,14)" rx="2" ry="2" />
<text  x="91.67" y="199" >__cpufreq..</text>
</g>
<g >
<title>schedule_idle (2 samples, 13.33%)</title><rect x="639.3" y="224" width="157.4" height="10.0" fill="rgb(249,92,40)" rx="2" ry="2" />
<text  x="642.33" y="232" >schedule_idle</text>
</g>
<g >
<title>__arm64_sys_futex (1 samples, 6.67%)</title><rect x="1111.3" y="158" width="78.7" height="10.0" fill="rgb(252,218,4)" rx="2" ry="2" />
<text  x="1114.33" y="166" >__arm64_s..</text>
</g>
<g >
<title>schedule (1 samples, 6.67%)</title><rect x="10.0" y="180" width="78.7" height="10.0" fill="rgb(245,173,6)" rx="2" ry="2" />
<text  x="13.00" y="188" >schedule</text>
</g>
<g >
<title>schedule (1 samples, 6.67%)</title><rect x="1111.3" y="103" width="78.7" height="10.0" fill="rgb(211,216,0)" rx="2" ry="2" />
<text  x="1114.33" y="111" >schedule</text>
</g>
<g >
<title>schedule (1 samples, 6.67%)</title><rect x="88.7" y="48" width="78.6" height="10.0" fill="rgb(227,189,18)" rx="2" ry="2" />
<text  x="91.67" y="56" >schedule</text>
</g>
<g >
<title>[libc.so] (1 samples, 6.67%)</title><rect x="1111.3" y="191" width="78.7" height="10.0" fill="rgb(207,48,31)" rx="2" ry="2" />
<text  x="1114.33" y="199" >[libc.so]</text>
</g>
<g >
<title>clk_core_set_rate_nolock (1 samples, 6.67%)</title><rect x="88.7" y="147" width="78.6" height="10.0" fill="rgb(223,195,41)" rx="2" ry="2" />
<text  x="91.67" y="155" >clk_core_..</text>
</g>
<g >
<title>[libc.so] (1 samples, 6.67%)</title><rect x="1111.3" y="202" width="78.7" height="10.0" fill="rgb(240,209,21)" rx="2" ry="2" />
<text  x="1114.33" y="210" >[libc.so]</text>
</g>
<g >
<title>od_dbs_update (1 samples, 6.67%)</title><rect x="88.7" y="202" width="78.6" height="10.0" fill="rgb(228,194,6)" rx="2" ry="2" />
<text  x="91.67" y="210" >od_dbs_up..</text>
</g>
<g >
<title>[libubox.so.20210302] (1 samples, 6.67%)</title><rect x="1032.7" y="213" width="78.6" height="10.0" fill="rgb(214,141,36)" rx="2" ry="2" />
<text  x="1035.67" y="221" >[libubox...</text>
</g>
<g >
<title>schedule_idle (2 samples, 13.33%)</title><rect x="796.7" y="191" width="157.3" height="10.0" fill="rgb(221,47,6)" rx="2" ry="2" />
<text  x="799.67" y="199" >schedule_idle</text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 6.67%)</title><rect x="954.0" y="147" width="78.7" height="10.0" fill="rgb(209,141,13)" rx="2" ry="2" />
<text  x="957.00" y="155" >schedule_..</text>
</g>
<g >
<title>secondary_start_kernel (2 samples, 13.33%)</title><rect x="639.3" y="257" width="157.4" height="10.0" fill="rgb(207,192,49)" rx="2" ry="2" />
<text  x="642.33" y="265" >secondary_start_kernel</text>
</g>
<g >
<title>[libwolfssl.so.4.7.0.66253b90] (1 samples, 6.67%)</title><rect x="1032.7" y="180" width="78.6" height="10.0" fill="rgb(226,175,36)" rx="2" ry="2" />
<text  x="1035.67" y="188" >[libwolfs..</text>
</g>
<g >
<title>work_pending (1 samples, 6.67%)</title><rect x="1032.7" y="169" width="78.6" height="10.0" fill="rgb(214,175,1)" rx="2" ry="2" />
<text  x="1035.67" y="177" >work_pend..</text>
</g>
<g >
<title>[libustream-ssl.so] (1 samples, 6.67%)</title><rect x="1032.7" y="202" width="78.6" height="10.0" fill="rgb(239,185,12)" rx="2" ry="2" />
<text  x="1035.67" y="210" >[libustre..</text>
</g>
<g >
<title>do_notify_resume (1 samples, 6.67%)</title><rect x="1032.7" y="158" width="78.6" height="10.0" fill="rgb(218,102,42)" rx="2" ry="2" />
<text  x="1035.67" y="166" >do_notify..</text>
</g>
<g >
<title>schedule (1 samples, 6.67%)</title><rect x="403.3" y="224" width="78.7" height="10.0" fill="rgb(241,112,1)" rx="2" ry="2" />
<text  x="406.33" y="232" >schedule</text>
</g>
<g >
<title>all (15 samples, 100%)</title><rect x="10.0" y="279" width="1180.0" height="10.0" fill="rgb(207,7,1)" rx="2" ry="2" />
<text  x="13.00" y="287" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 6.67%)</title><rect x="403.3" y="257" width="78.7" height="10.0" fill="rgb(254,154,34)" rx="2" ry="2" />
<text  x="406.33" y="265" >ret_from_..</text>
</g>
<g >
<title>kworker/1:1-eve (1 samples, 6.67%)</title><rect x="324.7" y="268" width="78.6" height="10.0" fill="rgb(232,44,40)" rx="2" ry="2" />
<text  x="327.67" y="276" >kworker/1..</text>
</g>
<g >
<title>mbox_send_message (1 samples, 6.67%)</title><rect x="88.7" y="81" width="78.6" height="10.0" fill="rgb(207,133,27)" rx="2" ry="2" />
<text  x="91.67" y="89" >mbox_send..</text>
</g>
<g >
<title>worker_thread (1 samples, 6.67%)</title><rect x="403.3" y="235" width="78.7" height="10.0" fill="rgb(221,200,0)" rx="2" ry="2" />
<text  x="406.33" y="243" >worker_th..</text>
</g>
<g >
<title>dbs_work_handler (1 samples, 6.67%)</title><rect x="88.7" y="213" width="78.6" height="10.0" fill="rgb(249,187,27)" rx="2" ry="2" />
<text  x="91.67" y="221" >dbs_work_..</text>
</g>
<g >
<title>schedule_timeout (1 samples, 6.67%)</title><rect x="88.7" y="59" width="78.6" height="10.0" fill="rgb(215,75,1)" rx="2" ry="2" />
<text  x="91.67" y="67" >schedule_..</text>
</g>
<g >
<title>schedule (1 samples, 6.67%)</title><rect x="88.7" y="37" width="78.6" height="10.0" fill="rgb(246,198,51)" rx="2" ry="2" />
<text  x="91.67" y="45" >schedule</text>
</g>
<g >
<title>do_idle (2 samples, 13.33%)</title><rect x="639.3" y="235" width="157.4" height="10.0" fill="rgb(221,189,28)" rx="2" ry="2" />
<text  x="642.33" y="243" >do_idle</text>
</g>
<g >
<title>worker_thread (3 samples, 20.00%)</title><rect x="88.7" y="235" width="236.0" height="10.0" fill="rgb(234,118,36)" rx="2" ry="2" />
<text  x="91.67" y="243" >worker_thread</text>
</g>
<g >
<title>[collectd] (1 samples, 6.67%)</title><rect x="1111.3" y="224" width="78.7" height="10.0" fill="rgb(235,104,35)" rx="2" ry="2" />
<text  x="1114.33" y="232" >[collectd]</text>
</g>
<g >
<title>ret_from_fork (3 samples, 20.00%)</title><rect x="88.7" y="257" width="236.0" height="10.0" fill="rgb(247,55,23)" rx="2" ry="2" />
<text  x="91.67" y="265" >ret_from_fork</text>
</g>
<g >
<title>schedule (1 samples, 6.67%)</title><rect x="954.0" y="125" width="78.7" height="10.0" fill="rgb(239,116,14)" rx="2" ry="2" />
<text  x="957.00" y="133" >schedule</text>
</g>
<g >
<title>schedule (2 samples, 13.33%)</title><rect x="167.3" y="213" width="157.4" height="10.0" fill="rgb(233,171,32)" rx="2" ry="2" />
<text  x="170.33" y="221" >schedule</text>
</g>
<g >
<title>[libc.so] (1 samples, 6.67%)</title><rect x="1111.3" y="235" width="78.7" height="10.0" fill="rgb(224,207,12)" rx="2" ry="2" />
<text  x="1114.33" y="243" >[libc.so]</text>
</g>
<g >
<title>el0_svc (1 samples, 6.67%)</title><rect x="954.0" y="202" width="78.7" height="10.0" fill="rgb(221,40,32)" rx="2" ry="2" />
<text  x="957.00" y="210" >el0_svc</text>
</g>
<g >
<title>[dnsmasq] (1 samples, 6.67%)</title><rect x="10.0" y="224" width="78.7" height="10.0" fill="rgb(209,165,18)" rx="2" ry="2" />
<text  x="13.00" y="232" >[dnsmasq]</text>
</g>
<g >
<title>[unknown] (2 samples, 13.33%)</title><rect x="954.0" y="257" width="157.3" height="10.0" fill="rgb(216,90,28)" rx="2" ry="2" />
<text  x="957.00" y="265" >[unknown]</text>
</g>
<g >
<title>clk_set_rate (1 samples, 6.67%)</title><rect x="88.7" y="158" width="78.6" height="10.0" fill="rgb(220,44,40)" rx="2" ry="2" />
<text  x="91.67" y="166" >clk_set_r..</text>
</g>
<g >
<title>netifd (1 samples, 6.67%)</title><rect x="482.0" y="268" width="78.7" height="10.0" fill="rgb(212,159,35)" rx="2" ry="2" />
<text  x="485.00" y="276" >netifd</text>
</g>
<g >
<title>ret_from_fork (1 samples, 6.67%)</title><rect x="324.7" y="257" width="78.6" height="10.0" fill="rgb(223,211,33)" rx="2" ry="2" />
<text  x="327.67" y="265" >ret_from_..</text>
</g>
<g >
<title>[uhttpd] (2 samples, 13.33%)</title><rect x="954.0" y="235" width="157.3" height="10.0" fill="rgb(241,133,7)" rx="2" ry="2" />
<text  x="957.00" y="243" >[uhttpd]</text>
</g>
<g >
<title>worker_thread (1 samples, 6.67%)</title><rect x="324.7" y="235" width="78.6" height="10.0" fill="rgb(246,11,19)" rx="2" ry="2" />
<text  x="327.67" y="243" >worker_th..</text>
</g>
<g >
<title>[libc.so] (1 samples, 6.67%)</title><rect x="1111.3" y="246" width="78.7" height="10.0" fill="rgb(238,215,29)" rx="2" ry="2" />
<text  x="1114.33" y="254" >[libc.so]</text>
</g>
<g >
<title>[libc.so] (1 samples, 6.67%)</title><rect x="482.0" y="246" width="78.7" height="10.0" fill="rgb(213,56,33)" rx="2" ry="2" />
<text  x="485.00" y="254" >[libc.so]</text>
</g>
<g >
<title>schedule (1 samples, 6.67%)</title><rect x="482.0" y="125" width="78.7" height="10.0" fill="rgb(220,177,19)" rx="2" ry="2" />
<text  x="485.00" y="133" >schedule</text>
</g>
<g >
<title>ep_poll (1 samples, 6.67%)</title><rect x="482.0" y="158" width="78.7" height="10.0" fill="rgb(240,224,46)" rx="2" ry="2" />
<text  x="485.00" y="166" >ep_poll</text>
</g>
<g >
<title>do_epoll_wait (1 samples, 6.67%)</title><rect x="482.0" y="169" width="78.7" height="10.0" fill="rgb(231,111,24)" rx="2" ry="2" />
<text  x="485.00" y="177" >do_epoll_..</text>
</g>
<g >
<title>cpu_startup_entry (2 samples, 13.33%)</title><rect x="639.3" y="246" width="157.4" height="10.0" fill="rgb(244,117,2)" rx="2" ry="2" />
<text  x="642.33" y="254" >cpu_startup_entry</text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 6.67%)</title><rect x="954.0" y="136" width="78.7" height="10.0" fill="rgb(230,125,22)" rx="2" ry="2" />
<text  x="957.00" y="144" >schedule_..</text>
</g>
<g >
<title>uhttpd (2 samples, 13.33%)</title><rect x="954.0" y="268" width="157.3" height="10.0" fill="rgb(231,180,35)" rx="2" ry="2" />
<text  x="957.00" y="276" >uhttpd</text>
</g>
<g >
<title>writer#4 (1 samples, 6.67%)</title><rect x="1111.3" y="268" width="78.7" height="10.0" fill="rgb(224,119,53)" rx="2" ry="2" />
<text  x="1114.33" y="276" >writer#4</text>
</g>
<g >
<title>rcu_sched (1 samples, 6.67%)</title><rect x="560.7" y="268" width="78.6" height="10.0" fill="rgb(241,104,17)" rx="2" ry="2" />
<text  x="563.67" y="276" >rcu_sched</text>
</g>
<g >
<title>schedule (1 samples, 6.67%)</title><rect x="403.3" y="213" width="78.7" height="10.0" fill="rgb(239,177,25)" rx="2" ry="2" />
<text  x="406.33" y="221" >schedule</text>
</g>
<g >
<title>schedule_timeout (1 samples, 6.67%)</title><rect x="560.7" y="224" width="78.6" height="10.0" fill="rgb(213,41,51)" rx="2" ry="2" />
<text  x="563.67" y="232" >schedule_..</text>
</g>
<g >
<title>start_kernel (2 samples, 13.33%)</title><rect x="796.7" y="257" width="157.3" height="10.0" fill="rgb(229,42,16)" rx="2" ry="2" />
<text  x="799.67" y="265" >start_kernel</text>
</g>
<g >
<title>[libubox.so.20210302] (2 samples, 13.33%)</title><rect x="954.0" y="224" width="157.3" height="10.0" fill="rgb(248,221,15)" rx="2" ry="2" />
<text  x="957.00" y="232" >[libubox.so.20210302]</text>
</g>
<g >
<title>kthread (3 samples, 20.00%)</title><rect x="88.7" y="246" width="236.0" height="10.0" fill="rgb(211,38,18)" rx="2" ry="2" />
<text  x="91.67" y="254" >kthread</text>
</g>
<g >
<title>[unknown] (1 samples, 6.67%)</title><rect x="10.0" y="257" width="78.7" height="10.0" fill="rgb(254,15,6)" rx="2" ry="2" />
<text  x="13.00" y="265" >[unknown]</text>
</g>
<g >
<title>process_one_work (1 samples, 6.67%)</title><rect x="88.7" y="224" width="78.6" height="10.0" fill="rgb(208,147,43)" rx="2" ry="2" />
<text  x="91.67" y="232" >process_o..</text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 6.67%)</title><rect x="1111.3" y="125" width="78.7" height="10.0" fill="rgb(247,42,19)" rx="2" ry="2" />
<text  x="1114.33" y="133" >futex_wai..</text>
</g>
<g >
<title>arch_call_rest_init (2 samples, 13.33%)</title><rect x="796.7" y="246" width="157.3" height="10.0" fill="rgb(242,65,11)" rx="2" ry="2" />
<text  x="799.67" y="254" >arch_call_rest_init</text>
</g>
<g >
<title>rcu_gp_kthread (1 samples, 6.67%)</title><rect x="560.7" y="235" width="78.6" height="10.0" fill="rgb(224,55,23)" rx="2" ry="2" />
<text  x="563.67" y="243" >rcu_gp_kt..</text>
</g>
<g >
<title>rpi_firmware_transaction (1 samples, 6.67%)</title><rect x="88.7" y="92" width="78.6" height="10.0" fill="rgb(248,49,39)" rx="2" ry="2" />
<text  x="91.67" y="100" >rpi_firmw..</text>
</g>
<g >
<title>schedule (1 samples, 6.67%)</title><rect x="1032.7" y="147" width="78.6" height="10.0" fill="rgb(206,186,36)" rx="2" ry="2" />
<text  x="1035.67" y="155" >schedule</text>
</g>
<g >
<title>[dnsmasq] (1 samples, 6.67%)</title><rect x="10.0" y="213" width="78.7" height="10.0" fill="rgb(230,135,40)" rx="2" ry="2" />
<text  x="13.00" y="221" >[dnsmasq]</text>
</g>
<g >
<title>set_target (1 samples, 6.67%)</title><rect x="88.7" y="180" width="78.6" height="10.0" fill="rgb(207,213,3)" rx="2" ry="2" />
<text  x="91.67" y="188" >set_target</text>
</g>
<g >
<title>schedule (2 samples, 13.33%)</title><rect x="167.3" y="224" width="157.4" height="10.0" fill="rgb(251,77,7)" rx="2" ry="2" />
<text  x="170.33" y="232" >schedule</text>
</g>
<g >
<title>raspberrypi_fw_set_rate (1 samples, 6.67%)</title><rect x="88.7" y="125" width="78.6" height="10.0" fill="rgb(253,12,17)" rx="2" ry="2" />
<text  x="91.67" y="133" >raspberry..</text>
</g>
<g >
<title>do_notify_resume (1 samples, 6.67%)</title><rect x="10.0" y="191" width="78.7" height="10.0" fill="rgb(234,198,0)" rx="2" ry="2" />
<text  x="13.00" y="199" >do_notify..</text>
</g>
<g >
<title>ret_from_fork (1 samples, 6.67%)</title><rect x="560.7" y="257" width="78.6" height="10.0" fill="rgb(242,75,10)" rx="2" ry="2" />
<text  x="563.67" y="265" >ret_from_..</text>
</g>
<g >
<title>futex_wait (1 samples, 6.67%)</title><rect x="1111.3" y="136" width="78.7" height="10.0" fill="rgb(250,128,48)" rx="2" ry="2" />
<text  x="1114.33" y="144" >futex_wait</text>
</g>
<g >
<title>__noinstr_text_start (2 samples, 13.33%)</title><rect x="796.7" y="235" width="157.3" height="10.0" fill="rgb(207,3,42)" rx="2" ry="2" />
<text  x="799.67" y="243" >__noinstr_text_start</text>
</g>
<g >
<title>schedule (1 samples, 6.67%)</title><rect x="560.7" y="213" width="78.6" height="10.0" fill="rgb(251,68,29)" rx="2" ry="2" />
<text  x="563.67" y="221" >schedule</text>
</g>
<g >
<title>el0_svc_handler (1 samples, 6.67%)</title><rect x="1111.3" y="169" width="78.7" height="10.0" fill="rgb(236,174,13)" rx="2" ry="2" />
<text  x="1114.33" y="177" >el0_svc_h..</text>
</g>
<g >
<title>cpu_startup_entry (2 samples, 13.33%)</title><rect x="796.7" y="224" width="157.3" height="10.0" fill="rgb(227,135,47)" rx="2" ry="2" />
<text  x="799.67" y="232" >cpu_startup_entry</text>
</g>
<g >
<title>[libc.so] (1 samples, 6.67%)</title><rect x="1111.3" y="213" width="78.7" height="10.0" fill="rgb(222,227,41)" rx="2" ry="2" />
<text  x="1114.33" y="221" >[libc.so]</text>
</g>
<g >
<title>[libc.so] (1 samples, 6.67%)</title><rect x="482.0" y="213" width="78.7" height="10.0" fill="rgb(218,66,6)" rx="2" ry="2" />
<text  x="485.00" y="221" >[libc.so]</text>
</g>
<g >
<title>el0_svc (1 samples, 6.67%)</title><rect x="1111.3" y="180" width="78.7" height="10.0" fill="rgb(217,144,50)" rx="2" ry="2" />
<text  x="1114.33" y="188" >el0_svc</text>
</g>
<g >
<title>[libc.so] (2 samples, 13.33%)</title><rect x="954.0" y="246" width="157.3" height="10.0" fill="rgb(233,171,53)" rx="2" ry="2" />
<text  x="957.00" y="254" >[libc.so]</text>
</g>
<g >
<title>rpi_firmware_property_list (1 samples, 6.67%)</title><rect x="88.7" y="103" width="78.6" height="10.0" fill="rgb(217,174,18)" rx="2" ry="2" />
<text  x="91.67" y="111" >rpi_firmw..</text>
</g>
<g >
<title>kthread (1 samples, 6.67%)</title><rect x="324.7" y="246" width="78.6" height="10.0" fill="rgb(208,210,11)" rx="2" ry="2" />
<text  x="327.67" y="254" >kthread</text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 6.67%)</title><rect x="482.0" y="136" width="78.7" height="10.0" fill="rgb(247,109,9)" rx="2" ry="2" />
<text  x="485.00" y="144" >schedule_..</text>
</g>
<g >
<title>[netifd] (1 samples, 6.67%)</title><rect x="482.0" y="235" width="78.7" height="10.0" fill="rgb(229,3,47)" rx="2" ry="2" />
<text  x="485.00" y="243" >[netifd]</text>
</g>
<g >
<title>rpi_firmware_property (1 samples, 6.67%)</title><rect x="88.7" y="114" width="78.6" height="10.0" fill="rgb(248,216,6)" rx="2" ry="2" />
<text  x="91.67" y="122" >rpi_firmw..</text>
</g>
<g >
<title>dev_pm_opp_set_rate (1 samples, 6.67%)</title><rect x="88.7" y="169" width="78.6" height="10.0" fill="rgb(221,200,33)" rx="2" ry="2" />
<text  x="91.67" y="177" >dev_pm_op..</text>
</g>
<g >
<title>kthread (1 samples, 6.67%)</title><rect x="560.7" y="246" width="78.6" height="10.0" fill="rgb(218,89,3)" rx="2" ry="2" />
<text  x="563.67" y="254" >kthread</text>
</g>
<g >
<title>el0_svc_handler (1 samples, 6.67%)</title><rect x="954.0" y="191" width="78.7" height="10.0" fill="rgb(216,225,3)" rx="2" ry="2" />
<text  x="957.00" y="199" >el0_svc_h..</text>
</g>
<g >
<title>schedule (1 samples, 6.67%)</title><rect x="560.7" y="202" width="78.6" height="10.0" fill="rgb(232,185,4)" rx="2" ry="2" />
<text  x="563.67" y="210" >schedule</text>
</g>
<g >
<title>schedule_idle (2 samples, 13.33%)</title><rect x="639.3" y="213" width="157.4" height="10.0" fill="rgb(254,29,50)" rx="2" ry="2" />
<text  x="642.33" y="221" >schedule_idle</text>
</g>
<g >
<title>do_idle (2 samples, 13.33%)</title><rect x="796.7" y="213" width="157.3" height="10.0" fill="rgb(230,94,15)" rx="2" ry="2" />
<text  x="799.67" y="221" >do_idle</text>
</g>
<g >
<title>schedule (1 samples, 6.67%)</title><rect x="482.0" y="114" width="78.7" height="10.0" fill="rgb(232,126,7)" rx="2" ry="2" />
<text  x="485.00" y="122" >schedule</text>
</g>
<g >
<title>schedule (1 samples, 6.67%)</title><rect x="1111.3" y="114" width="78.7" height="10.0" fill="rgb(243,120,53)" rx="2" ry="2" />
<text  x="1114.33" y="122" >schedule</text>
</g>
<g >
<title>[libustream-ssl.so] (1 samples, 6.67%)</title><rect x="1032.7" y="191" width="78.6" height="10.0" fill="rgb(218,223,26)" rx="2" ry="2" />
<text  x="1035.67" y="199" >[libustre..</text>
</g>
<g >
<title>schedule_idle (2 samples, 13.33%)</title><rect x="796.7" y="202" width="157.3" height="10.0" fill="rgb(223,63,18)" rx="2" ry="2" />
<text  x="799.67" y="210" >schedule_idle</text>
</g>
<g >
<title>__arm64_sys_epoll_pwait (1 samples, 6.67%)</title><rect x="954.0" y="180" width="78.7" height="10.0" fill="rgb(207,112,19)" rx="2" ry="2" />
<text  x="957.00" y="188" >__arm64_s..</text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 6.67%)</title><rect x="482.0" y="147" width="78.7" height="10.0" fill="rgb(219,64,2)" rx="2" ry="2" />
<text  x="485.00" y="155" >schedule_..</text>
</g>
<g >
<title>schedule (1 samples, 6.67%)</title><rect x="324.7" y="213" width="78.6" height="10.0" fill="rgb(233,54,51)" rx="2" ry="2" />
<text  x="327.67" y="221" >schedule</text>
</g>
<g >
<title>kworker/0:3-eve (3 samples, 20.00%)</title><rect x="88.7" y="268" width="236.0" height="10.0" fill="rgb(212,19,0)" rx="2" ry="2" />
<text  x="91.67" y="276" >kworker/0:3-eve</text>
</g>
</g>
</svg>
