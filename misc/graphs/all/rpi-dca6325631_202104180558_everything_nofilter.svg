<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="488" onload="init(evt)" viewBox="0 0 1200 488" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="488.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >rpi-dca6325631_SNAPSHOT_20210418-0557_everything</text>
<text id="details" x="10.00" y="471" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="471" > </text>
<g id="frames">
<g >
<title>__dev_queue_xmit (2 samples, 2.00%)</title><rect x="1060.2" y="136" width="23.6" height="10.0" fill="rgb(212,210,17)" rx="2" ry="2" />
<text  x="1063.20" y="144" >_..</text>
</g>
<g >
<title>ip6table_mangle_hook (1 samples, 1.00%)</title><rect x="918.6" y="114" width="11.8" height="10.0" fill="rgb(205,3,12)" rx="2" ry="2" />
<text  x="921.60" y="122" ></text>
</g>
<g >
<title>proc_pid_status (1 samples, 1.00%)</title><rect x="128.0" y="246" width="11.8" height="10.0" fill="rgb(207,111,12)" rx="2" ry="2" />
<text  x="131.00" y="254" ></text>
</g>
<g >
<title>tcf_mirred_act (2 samples, 2.00%)</title><rect x="942.2" y="180" width="23.6" height="10.0" fill="rgb(218,83,10)" rx="2" ry="2" />
<text  x="945.20" y="188" >t..</text>
</g>
<g >
<title>neigh_resolve_output (1 samples, 1.00%)</title><rect x="1107.4" y="158" width="11.8" height="10.0" fill="rgb(242,221,45)" rx="2" ry="2" />
<text  x="1110.40" y="166" ></text>
</g>
<g >
<title>dev_queue_xmit (2 samples, 2.00%)</title><rect x="942.2" y="169" width="23.6" height="10.0" fill="rgb(230,67,52)" rx="2" ry="2" />
<text  x="945.20" y="177" >d..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 1.00%)</title><rect x="364.0" y="334" width="11.8" height="10.0" fill="rgb(210,134,31)" rx="2" ry="2" />
<text  x="367.00" y="342" ></text>
</g>
<g >
<title>ip_rcv_finish (2 samples, 2.00%)</title><rect x="1060.2" y="224" width="23.6" height="10.0" fill="rgb(206,70,12)" rx="2" ry="2" />
<text  x="1063.20" y="232" >i..</text>
</g>
<g >
<title>process_backlog (3 samples, 3.00%)</title><rect x="906.8" y="279" width="35.4" height="10.0" fill="rgb(247,24,45)" rx="2" ry="2" />
<text  x="909.80" y="287" >pr..</text>
</g>
<g >
<title>tcpmss_mangle_packet (1 samples, 1.00%)</title><rect x="1142.8" y="158" width="11.8" height="10.0" fill="rgb(220,111,47)" rx="2" ry="2" />
<text  x="1145.80" y="166" ></text>
</g>
<g >
<title>run_timer_softirq (4 samples, 4.00%)</title><rect x="1001.2" y="301" width="47.2" height="10.0" fill="rgb(243,152,0)" rx="2" ry="2" />
<text  x="1004.20" y="309" >run_..</text>
</g>
<g >
<title>led_heartbeat_function (1 samples, 1.00%)</title><rect x="1024.8" y="279" width="11.8" height="10.0" fill="rgb(212,146,31)" rx="2" ry="2" />
<text  x="1027.80" y="287" ></text>
</g>
<g >
<title>__netif_receive_skb (3 samples, 3.00%)</title><rect x="906.8" y="268" width="35.4" height="10.0" fill="rgb(239,17,46)" rx="2" ry="2" />
<text  x="909.80" y="276" >__..</text>
</g>
<g >
<title>hash_ip6_test (1 samples, 1.00%)</title><rect x="918.6" y="59" width="11.8" height="10.0" fill="rgb(244,99,25)" rx="2" ry="2" />
<text  x="921.60" y="67" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (1 samples, 1.00%)</title><rect x="375.8" y="202" width="11.8" height="10.0" fill="rgb(245,189,27)" rx="2" ry="2" />
<text  x="378.80" y="210" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (2 samples, 2.00%)</title><rect x="942.2" y="235" width="23.6" height="10.0" fill="rgb(251,20,29)" rx="2" ry="2" />
<text  x="945.20" y="243" >_..</text>
</g>
<g >
<title>__handle_domain_irq (27 samples, 27.00%)</title><rect x="836.0" y="334" width="318.6" height="10.0" fill="rgb(218,105,53)" rx="2" ry="2" />
<text  x="839.00" y="342" >__handle_domain_irq</text>
</g>
<g >
<title>net_rx_action (1 samples, 1.00%)</title><rect x="375.8" y="323" width="11.8" height="10.0" fill="rgb(206,197,6)" rx="2" ry="2" />
<text  x="378.80" y="331" ></text>
</g>
<g >
<title>usb_stor_transparent_scsi_command (2 samples, 2.00%)</title><rect x="1166.4" y="389" width="23.6" height="10.0" fill="rgb(223,212,1)" rx="2" ry="2" />
<text  x="1169.40" y="397" >u..</text>
</g>
<g >
<title>ip6_forward (2 samples, 2.00%)</title><rect x="918.6" y="147" width="23.6" height="10.0" fill="rgb(224,9,46)" rx="2" ry="2" />
<text  x="921.60" y="155" >i..</text>
</g>
<g >
<title>__netif_receive_skb_one_core (3 samples, 3.00%)</title><rect x="906.8" y="180" width="35.4" height="10.0" fill="rgb(227,26,43)" rx="2" ry="2" />
<text  x="909.80" y="188" >__..</text>
</g>
<g >
<title>arch_cpu_idle (11 samples, 11.00%)</title><rect x="257.8" y="389" width="129.8" height="10.0" fill="rgb(220,100,8)" rx="2" ry="2" />
<text  x="260.80" y="397" >arch_cpu_idle</text>
</g>
<g >
<title>ip6_output (2 samples, 2.00%)</title><rect x="1107.4" y="202" width="23.6" height="10.0" fill="rgb(249,39,29)" rx="2" ry="2" />
<text  x="1110.40" y="210" >i..</text>
</g>
<g >
<title>lock_timer_base (1 samples, 1.00%)</title><rect x="1024.8" y="257" width="11.8" height="10.0" fill="rgb(253,82,0)" rx="2" ry="2" />
<text  x="1027.80" y="265" ></text>
</g>
<g >
<title>ip6table_filter_hook (1 samples, 1.00%)</title><rect x="930.4" y="125" width="11.8" height="10.0" fill="rgb(247,208,8)" rx="2" ry="2" />
<text  x="933.40" y="133" ></text>
</g>
<g >
<title>ip_forward_finish (2 samples, 2.00%)</title><rect x="1060.2" y="202" width="23.6" height="10.0" fill="rgb(249,8,21)" rx="2" ry="2" />
<text  x="1063.20" y="210" >i..</text>
</g>
<g >
<title>arch_call_rest_init (66 samples, 66.00%)</title><rect x="387.6" y="411" width="778.8" height="10.0" fill="rgb(247,59,53)" rx="2" ry="2" />
<text  x="390.60" y="419" >arch_call_rest_init</text>
</g>
<g >
<title>proc_pid_readdir (2 samples, 2.00%)</title><rect x="139.8" y="290" width="23.6" height="10.0" fill="rgb(218,39,54)" rx="2" ry="2" />
<text  x="142.80" y="298" >p..</text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 1.00%)</title><rect x="375.8" y="290" width="11.8" height="10.0" fill="rgb(252,146,22)" rx="2" ry="2" />
<text  x="378.80" y="298" ></text>
</g>
<g >
<title>__skb_gro_checksum_complete (1 samples, 1.00%)</title><rect x="895.0" y="235" width="11.8" height="10.0" fill="rgb(229,212,4)" rx="2" ry="2" />
<text  x="898.00" y="243" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 1.00%)</title><rect x="1119.2" y="191" width="11.8" height="10.0" fill="rgb(223,112,50)" rx="2" ry="2" />
<text  x="1122.20" y="199" ></text>
</g>
<g >
<title>schedule (1 samples, 1.00%)</title><rect x="104.4" y="378" width="11.8" height="10.0" fill="rgb(243,48,39)" rx="2" ry="2" />
<text  x="107.40" y="386" ></text>
</g>
<g >
<title>__kmalloc (1 samples, 1.00%)</title><rect x="1166.4" y="323" width="11.8" height="10.0" fill="rgb(235,101,34)" rx="2" ry="2" />
<text  x="1169.40" y="331" ></text>
</g>
<g >
<title>ip_finish_output (2 samples, 2.00%)</title><rect x="1060.2" y="180" width="23.6" height="10.0" fill="rgb(254,193,41)" rx="2" ry="2" />
<text  x="1063.20" y="188" >i..</text>
</g>
<g >
<title>irq_exit (1 samples, 1.00%)</title><rect x="375.8" y="345" width="11.8" height="10.0" fill="rgb(237,192,38)" rx="2" ry="2" />
<text  x="378.80" y="353" ></text>
</g>
<g >
<title>usb_submit_urb (1 samples, 1.00%)</title><rect x="1178.2" y="323" width="11.8" height="10.0" fill="rgb(214,111,22)" rx="2" ry="2" />
<text  x="1181.20" y="331" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 1.00%)</title><rect x="1107.4" y="125" width="11.8" height="10.0" fill="rgb(235,171,23)" rx="2" ry="2" />
<text  x="1110.40" y="133" ></text>
</g>
<g >
<title>ipv6_rcv (1 samples, 1.00%)</title><rect x="375.8" y="191" width="11.8" height="10.0" fill="rgb(229,9,35)" rx="2" ry="2" />
<text  x="378.80" y="199" ></text>
</g>
<g >
<title>ret_from_fork (3 samples, 3.00%)</title><rect x="80.8" y="422" width="35.4" height="10.0" fill="rgb(252,45,50)" rx="2" ry="2" />
<text  x="83.80" y="430" >re..</text>
</g>
<g >
<title>swapper (77 samples, 77.00%)</title><rect x="257.8" y="433" width="908.6" height="10.0" fill="rgb(245,54,25)" rx="2" ry="2" />
<text  x="260.80" y="441" >swapper</text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 1.00%)</title><rect x="1072.0" y="59" width="11.8" height="10.0" fill="rgb(220,140,40)" rx="2" ry="2" />
<text  x="1075.00" y="67" ></text>
</g>
<g >
<title>ipv6_rcv (5 samples, 5.00%)</title><rect x="1095.6" y="235" width="59.0" height="10.0" fill="rgb(224,78,25)" rx="2" ry="2" />
<text  x="1098.60" y="243" >ipv6_rcv</text>
</g>
<g >
<title>ip6_finish_output (1 samples, 1.00%)</title><rect x="1107.4" y="191" width="11.8" height="10.0" fill="rgb(237,24,39)" rx="2" ry="2" />
<text  x="1110.40" y="199" ></text>
</g>
<g >
<title>[busybox] (6 samples, 6.00%)</title><rect x="187.0" y="411" width="70.8" height="10.0" fill="rgb(250,155,28)" rx="2" ry="2" />
<text  x="190.00" y="419" >[busybox]</text>
</g>
<g >
<title>nf_hook_slow (1 samples, 1.00%)</title><rect x="918.6" y="125" width="11.8" height="10.0" fill="rgb(250,68,21)" rx="2" ry="2" />
<text  x="921.60" y="133" ></text>
</g>
<g >
<title>br_handle_frame (1 samples, 1.00%)</title><rect x="375.8" y="257" width="11.8" height="10.0" fill="rgb(223,139,34)" rx="2" ry="2" />
<text  x="378.80" y="265" ></text>
</g>
<g >
<title>ip6t_do_table (1 samples, 1.00%)</title><rect x="930.4" y="114" width="11.8" height="10.0" fill="rgb(234,22,28)" rx="2" ry="2" />
<text  x="933.40" y="122" ></text>
</g>
<g >
<title>do_idle (11 samples, 11.00%)</title><rect x="257.8" y="400" width="129.8" height="10.0" fill="rgb(254,80,6)" rx="2" ry="2" />
<text  x="260.80" y="408" >do_idle</text>
</g>
<g >
<title>ipv6_rcv (2 samples, 2.00%)</title><rect x="918.6" y="169" width="23.6" height="10.0" fill="rgb(213,220,51)" rx="2" ry="2" />
<text  x="921.60" y="177" >i..</text>
</g>
<g >
<title>br_handle_frame_finish (3 samples, 3.00%)</title><rect x="906.8" y="224" width="35.4" height="10.0" fill="rgb(248,4,31)" rx="2" ry="2" />
<text  x="909.80" y="232" >br..</text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 1.00%)</title><rect x="375.8" y="114" width="11.8" height="10.0" fill="rgb(219,194,9)" rx="2" ry="2" />
<text  x="378.80" y="122" ></text>
</g>
<g >
<title>el0_svc (1 samples, 1.00%)</title><rect x="21.8" y="323" width="11.8" height="10.0" fill="rgb(245,92,47)" rx="2" ry="2" />
<text  x="24.80" y="331" ></text>
</g>
<g >
<title>ip6t_do_table (1 samples, 1.00%)</title><rect x="1119.2" y="169" width="11.8" height="10.0" fill="rgb(231,150,31)" rx="2" ry="2" />
<text  x="1122.20" y="177" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 1.00%)</title><rect x="104.4" y="356" width="11.8" height="10.0" fill="rgb(229,19,18)" rx="2" ry="2" />
<text  x="107.40" y="364" ></text>
</g>
<g >
<title>[libc.so] (5 samples, 5.00%)</title><rect x="21.8" y="411" width="59.0" height="10.0" fill="rgb(242,21,45)" rx="2" ry="2" />
<text  x="24.80" y="419" >[libc...</text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 1.00%)</title><rect x="364.0" y="224" width="11.8" height="10.0" fill="rgb(229,165,44)" rx="2" ry="2" />
<text  x="367.00" y="232" ></text>
</g>
<g >
<title>__netif_receive_skb (8 samples, 8.00%)</title><rect x="1060.2" y="257" width="94.4" height="10.0" fill="rgb(216,3,11)" rx="2" ry="2" />
<text  x="1063.20" y="265" >__netif_rec..</text>
</g>
<g >
<title>ip_output (1 samples, 1.00%)</title><rect x="906.8" y="125" width="11.8" height="10.0" fill="rgb(238,99,53)" rx="2" ry="2" />
<text  x="909.80" y="133" ></text>
</g>
<g >
<title>iterate_dir (3 samples, 3.00%)</title><rect x="139.8" y="312" width="35.4" height="10.0" fill="rgb(210,110,13)" rx="2" ry="2" />
<text  x="142.80" y="320" >ite..</text>
</g>
<g >
<title>nf_nat_ipv4_pre_routing (1 samples, 1.00%)</title><rect x="1083.8" y="213" width="11.8" height="10.0" fill="rgb(227,179,37)" rx="2" ry="2" />
<text  x="1086.80" y="221" ></text>
</g>
<g >
<title>conntrack_mt_v3 (1 samples, 1.00%)</title><rect x="930.4" y="103" width="11.8" height="10.0" fill="rgb(215,123,22)" rx="2" ry="2" />
<text  x="933.40" y="111" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 1.00%)</title><rect x="895.0" y="268" width="11.8" height="10.0" fill="rgb(221,3,23)" rx="2" ry="2" />
<text  x="898.00" y="276" ></text>
</g>
<g >
<title>ip_forward_finish (1 samples, 1.00%)</title><rect x="906.8" y="136" width="11.8" height="10.0" fill="rgb(227,116,30)" rx="2" ry="2" />
<text  x="909.80" y="144" ></text>
</g>
<g >
<title>ip6_output (1 samples, 1.00%)</title><rect x="375.8" y="158" width="11.8" height="10.0" fill="rgb(233,189,51)" rx="2" ry="2" />
<text  x="378.80" y="166" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 1.00%)</title><rect x="989.4" y="290" width="11.8" height="10.0" fill="rgb(224,69,4)" rx="2" ry="2" />
<text  x="992.40" y="298" ></text>
</g>
<g >
<title>kworker/0:2-eve (1 samples, 1.00%)</title><rect x="10.0" y="433" width="11.8" height="10.0" fill="rgb(250,38,9)" rx="2" ry="2" />
<text  x="13.00" y="441" ></text>
</g>
<g >
<title>__arm64_sys_openat (1 samples, 1.00%)</title><rect x="175.2" y="334" width="11.8" height="10.0" fill="rgb(206,51,32)" rx="2" ry="2" />
<text  x="178.20" y="342" ></text>
</g>
<g >
<title>cpu_startup_entry (66 samples, 66.00%)</title><rect x="387.6" y="389" width="778.8" height="10.0" fill="rgb(208,69,33)" rx="2" ry="2" />
<text  x="390.60" y="397" >cpu_startup_entry</text>
</g>
<g >
<title>gic_handle_irq (2 samples, 2.00%)</title><rect x="364.0" y="367" width="23.6" height="10.0" fill="rgb(224,191,38)" rx="2" ry="2" />
<text  x="367.00" y="375" >g..</text>
</g>
<g >
<title>set_match_v4 (1 samples, 1.00%)</title><rect x="918.6" y="92" width="11.8" height="10.0" fill="rgb(209,67,3)" rx="2" ry="2" />
<text  x="921.60" y="100" ></text>
</g>
<g >
<title>reader#1 (6 samples, 6.00%)</title><rect x="116.2" y="433" width="70.8" height="10.0" fill="rgb(211,143,49)" rx="2" ry="2" />
<text  x="119.20" y="441" >reader#1</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 1.00%)</title><rect x="375.8" y="334" width="11.8" height="10.0" fill="rgb(210,27,42)" rx="2" ry="2" />
<text  x="378.80" y="342" ></text>
</g>
<g >
<title>__vfs_read (1 samples, 1.00%)</title><rect x="128.0" y="279" width="11.8" height="10.0" fill="rgb(241,181,53)" rx="2" ry="2" />
<text  x="131.00" y="287" ></text>
</g>
<g >
<title>usb_stor_Bulk_transport (2 samples, 2.00%)</title><rect x="1166.4" y="367" width="23.6" height="10.0" fill="rgb(238,165,21)" rx="2" ry="2" />
<text  x="1169.40" y="375" >u..</text>
</g>
<g >
<title>do_sys_open (1 samples, 1.00%)</title><rect x="175.2" y="323" width="11.8" height="10.0" fill="rgb(235,120,47)" rx="2" ry="2" />
<text  x="178.20" y="331" ></text>
</g>
<g >
<title>[perf] (5 samples, 5.00%)</title><rect x="21.8" y="400" width="59.0" height="10.0" fill="rgb(211,202,6)" rx="2" ry="2" />
<text  x="24.80" y="408" >[perf]</text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 1.00%)</title><rect x="1107.4" y="92" width="11.8" height="10.0" fill="rgb(209,51,21)" rx="2" ry="2" />
<text  x="1110.40" y="100" ></text>
</g>
<g >
<title>hash_ip6_kadt (1 samples, 1.00%)</title><rect x="918.6" y="70" width="11.8" height="10.0" fill="rgb(239,147,45)" rx="2" ry="2" />
<text  x="921.60" y="78" ></text>
</g>
<g >
<title>br_handle_frame (3 samples, 3.00%)</title><rect x="906.8" y="235" width="35.4" height="10.0" fill="rgb(235,28,11)" rx="2" ry="2" />
<text  x="909.80" y="243" >br..</text>
</g>
<g >
<title>__arm64_sys_getdents64 (3 samples, 3.00%)</title><rect x="139.8" y="334" width="35.4" height="10.0" fill="rgb(231,139,48)" rx="2" ry="2" />
<text  x="142.80" y="342" >__a..</text>
</g>
<g >
<title>tcf_classify (2 samples, 2.00%)</title><rect x="942.2" y="213" width="23.6" height="10.0" fill="rgb(224,122,5)" rx="2" ry="2" />
<text  x="945.20" y="221" >t..</text>
</g>
<g >
<title>[libc.so] (5 samples, 5.00%)</title><rect x="128.0" y="367" width="59.0" height="10.0" fill="rgb(233,6,19)" rx="2" ry="2" />
<text  x="131.00" y="375" >[libc...</text>
</g>
<g >
<title>__ip_finish_output (2 samples, 2.00%)</title><rect x="1060.2" y="169" width="23.6" height="10.0" fill="rgb(221,152,44)" rx="2" ry="2" />
<text  x="1063.20" y="177" >_..</text>
</g>
<g >
<title>ret_from_fork (1 samples, 1.00%)</title><rect x="10.0" y="422" width="11.8" height="10.0" fill="rgb(224,110,35)" rx="2" ry="2" />
<text  x="13.00" y="430" ></text>
</g>
<g >
<title>__d_lookup_rcu (1 samples, 1.00%)</title><rect x="175.2" y="257" width="11.8" height="10.0" fill="rgb(207,55,31)" rx="2" ry="2" />
<text  x="178.20" y="265" ></text>
</g>
<g >
<title>perf_event_for_each_child (4 samples, 4.00%)</title><rect x="33.6" y="246" width="47.2" height="10.0" fill="rgb(253,123,14)" rx="2" ry="2" />
<text  x="36.60" y="254" >perf..</text>
</g>
<g >
<title>__netif_receive_skb_core (3 samples, 3.00%)</title><rect x="906.8" y="246" width="35.4" height="10.0" fill="rgb(253,226,48)" rx="2" ry="2" />
<text  x="909.80" y="254" >__..</text>
</g>
<g >
<title>[perf] (5 samples, 5.00%)</title><rect x="21.8" y="389" width="59.0" height="10.0" fill="rgb(234,174,31)" rx="2" ry="2" />
<text  x="24.80" y="397" >[perf]</text>
</g>
<g >
<title>__netif_receive_skb_core (2 samples, 2.00%)</title><rect x="942.2" y="224" width="23.6" height="10.0" fill="rgb(245,141,40)" rx="2" ry="2" />
<text  x="945.20" y="232" >_..</text>
</g>
<g >
<title>skb_clone (1 samples, 1.00%)</title><rect x="1107.4" y="103" width="11.8" height="10.0" fill="rgb(251,116,40)" rx="2" ry="2" />
<text  x="1110.40" y="111" ></text>
</g>
<g >
<title>perf (5 samples, 5.00%)</title><rect x="21.8" y="433" width="59.0" height="10.0" fill="rgb(253,4,7)" rx="2" ry="2" />
<text  x="24.80" y="441" >perf</text>
</g>
<g >
<title>__netif_receive_skb_one_core (8 samples, 8.00%)</title><rect x="1060.2" y="246" width="94.4" height="10.0" fill="rgb(213,141,8)" rx="2" ry="2" />
<text  x="1063.20" y="254" >__netif_rec..</text>
</g>
<g >
<title>secondary_start_kernel (11 samples, 11.00%)</title><rect x="257.8" y="422" width="129.8" height="10.0" fill="rgb(229,174,50)" rx="2" ry="2" />
<text  x="260.80" y="430" >secondary_start_..</text>
</g>
<g >
<title>arp_send_dst.part.24 (1 samples, 1.00%)</title><rect x="364.0" y="268" width="11.8" height="10.0" fill="rgb(215,216,27)" rx="2" ry="2" />
<text  x="367.00" y="276" ></text>
</g>
<g >
<title>[perf] (5 samples, 5.00%)</title><rect x="21.8" y="378" width="59.0" height="10.0" fill="rgb(214,81,11)" rx="2" ry="2" />
<text  x="24.80" y="386" >[perf]</text>
</g>
<g >
<title>r8152_poll (2 samples, 2.00%)</title><rect x="942.2" y="279" width="23.6" height="10.0" fill="rgb(252,178,27)" rx="2" ry="2" />
<text  x="945.20" y="287" >r..</text>
</g>
<g >
<title>netif_receive_skb (3 samples, 3.00%)</title><rect x="906.8" y="202" width="35.4" height="10.0" fill="rgb(236,56,42)" rx="2" ry="2" />
<text  x="909.80" y="210" >ne..</text>
</g>
<g >
<title>gic_handle_irq (27 samples, 27.00%)</title><rect x="836.0" y="345" width="318.6" height="10.0" fill="rgb(245,172,21)" rx="2" ry="2" />
<text  x="839.00" y="353" >gic_handle_irq</text>
</g>
<g >
<title>ip6_forward (1 samples, 1.00%)</title><rect x="375.8" y="169" width="11.8" height="10.0" fill="rgb(247,221,44)" rx="2" ry="2" />
<text  x="378.80" y="177" ></text>
</g>
<g >
<title>seq_put_decimal_ull (1 samples, 1.00%)</title><rect x="128.0" y="235" width="11.8" height="10.0" fill="rgb(240,99,51)" rx="2" ry="2" />
<text  x="131.00" y="243" ></text>
</g>
<g >
<title>cake_enqueue (1 samples, 1.00%)</title><rect x="375.8" y="92" width="11.8" height="10.0" fill="rgb(223,21,44)" rx="2" ry="2" />
<text  x="378.80" y="100" ></text>
</g>
<g >
<title>tasklet_action (9 samples, 9.00%)</title><rect x="1048.4" y="301" width="106.2" height="10.0" fill="rgb(254,87,14)" rx="2" ry="2" />
<text  x="1051.40" y="309" >tasklet_action</text>
</g>
<g >
<title>process_one_work (1 samples, 1.00%)</title><rect x="10.0" y="389" width="11.8" height="10.0" fill="rgb(211,152,5)" rx="2" ry="2" />
<text  x="13.00" y="397" ></text>
</g>
<g >
<title>process_backlog (1 samples, 1.00%)</title><rect x="375.8" y="301" width="11.8" height="10.0" fill="rgb(226,218,22)" rx="2" ry="2" />
<text  x="378.80" y="309" ></text>
</g>
<g >
<title>nf_nat_ipv4_fn (1 samples, 1.00%)</title><rect x="1083.8" y="202" width="11.8" height="10.0" fill="rgb(213,168,41)" rx="2" ry="2" />
<text  x="1086.80" y="210" ></text>
</g>
<g >
<title>el0_svc_handler (4 samples, 4.00%)</title><rect x="139.8" y="345" width="47.2" height="10.0" fill="rgb(250,61,27)" rx="2" ry="2" />
<text  x="142.80" y="353" >el0_..</text>
</g>
<g >
<title>el0_svc (4 samples, 4.00%)</title><rect x="139.8" y="356" width="47.2" height="10.0" fill="rgb(221,190,5)" rx="2" ry="2" />
<text  x="142.80" y="364" >el0_..</text>
</g>
<g >
<title>usb_hcd_submit_urb (1 samples, 1.00%)</title><rect x="1178.2" y="312" width="11.8" height="10.0" fill="rgb(235,140,3)" rx="2" ry="2" />
<text  x="1181.20" y="320" ></text>
</g>
<g >
<title>usb_hcd_submit_urb (1 samples, 1.00%)</title><rect x="1048.4" y="257" width="11.8" height="10.0" fill="rgb(225,194,34)" rx="2" ry="2" />
<text  x="1051.40" y="265" ></text>
</g>
<g >
<title>[perf] (4 samples, 4.00%)</title><rect x="33.6" y="345" width="47.2" height="10.0" fill="rgb(232,26,33)" rx="2" ry="2" />
<text  x="36.60" y="353" >[perf]</text>
</g>
<g >
<title>[processes.so] (5 samples, 5.00%)</title><rect x="128.0" y="378" width="59.0" height="10.0" fill="rgb(228,67,10)" rx="2" ry="2" />
<text  x="131.00" y="386" >[proce..</text>
</g>
<g >
<title>__netif_receive_skb_one_core (1 samples, 1.00%)</title><rect x="375.8" y="279" width="11.8" height="10.0" fill="rgb(252,39,31)" rx="2" ry="2" />
<text  x="378.80" y="287" ></text>
</g>
<g >
<title>lookup_fast (1 samples, 1.00%)</title><rect x="175.2" y="268" width="11.8" height="10.0" fill="rgb(219,40,21)" rx="2" ry="2" />
<text  x="178.20" y="276" ></text>
</g>
<g >
<title>ip6table_filter_hook (1 samples, 1.00%)</title><rect x="1131.0" y="191" width="11.8" height="10.0" fill="rgb(215,54,27)" rx="2" ry="2" />
<text  x="1134.00" y="199" ></text>
</g>
<g >
<title>u32_classify (2 samples, 2.00%)</title><rect x="942.2" y="202" width="23.6" height="10.0" fill="rgb(231,209,45)" rx="2" ry="2" />
<text  x="945.20" y="210" >u..</text>
</g>
<g >
<title>nf_nat_packet (1 samples, 1.00%)</title><rect x="1083.8" y="180" width="11.8" height="10.0" fill="rgb(232,99,46)" rx="2" ry="2" />
<text  x="1086.80" y="188" ></text>
</g>
<g >
<title>[collectd] (6 samples, 6.00%)</title><rect x="116.2" y="389" width="70.8" height="10.0" fill="rgb(215,18,52)" rx="2" ry="2" />
<text  x="119.20" y="397" >[collectd]</text>
</g>
<g >
<title>ksys_read (1 samples, 1.00%)</title><rect x="128.0" y="301" width="11.8" height="10.0" fill="rgb(233,131,1)" rx="2" ry="2" />
<text  x="131.00" y="309" ></text>
</g>
<g >
<title>__schedule (1 samples, 1.00%)</title><rect x="104.4" y="367" width="11.8" height="10.0" fill="rgb(216,156,7)" rx="2" ry="2" />
<text  x="107.40" y="375" ></text>
</g>
<g >
<title>ip6t_do_table (1 samples, 1.00%)</title><rect x="1142.8" y="180" width="11.8" height="10.0" fill="rgb(211,5,28)" rx="2" ry="2" />
<text  x="1145.80" y="188" ></text>
</g>
<g >
<title>seq_put_decimal_ull_width (1 samples, 1.00%)</title><rect x="128.0" y="224" width="11.8" height="10.0" fill="rgb(238,18,22)" rx="2" ry="2" />
<text  x="131.00" y="232" ></text>
</g>
<g >
<title>vfs_read (1 samples, 1.00%)</title><rect x="128.0" y="290" width="11.8" height="10.0" fill="rgb(230,127,54)" rx="2" ry="2" />
<text  x="131.00" y="298" ></text>
</g>
<g >
<title>el0_svc (1 samples, 1.00%)</title><rect x="128.0" y="334" width="11.8" height="10.0" fill="rgb(236,183,40)" rx="2" ry="2" />
<text  x="131.00" y="342" ></text>
</g>
<g >
<title>__napi_poll (7 samples, 7.00%)</title><rect x="883.2" y="290" width="82.6" height="10.0" fill="rgb(206,115,22)" rx="2" ry="2" />
<text  x="886.20" y="298" >__napi_poll</text>
</g>
<g >
<title>rcu_core_si (1 samples, 1.00%)</title><rect x="965.8" y="301" width="11.8" height="10.0" fill="rgb(206,205,49)" rx="2" ry="2" />
<text  x="968.80" y="309" ></text>
</g>
<g >
<title>usb_stor_bulk_srb (2 samples, 2.00%)</title><rect x="1166.4" y="356" width="23.6" height="10.0" fill="rgb(225,131,44)" rx="2" ry="2" />
<text  x="1169.40" y="364" >u..</text>
</g>
<g >
<title>usb_submit_urb (1 samples, 1.00%)</title><rect x="1048.4" y="268" width="11.8" height="10.0" fill="rgb(234,165,29)" rx="2" ry="2" />
<text  x="1051.40" y="276" ></text>
</g>
<g >
<title>ksys_getdents64 (3 samples, 3.00%)</title><rect x="139.8" y="323" width="35.4" height="10.0" fill="rgb(215,216,8)" rx="2" ry="2" />
<text  x="142.80" y="331" >ksy..</text>
</g>
<g >
<title>[unknown] (5 samples, 5.00%)</title><rect x="21.8" y="422" width="59.0" height="10.0" fill="rgb(245,130,19)" rx="2" ry="2" />
<text  x="24.80" y="430" >[unkno..</text>
</g>
<g >
<title>__ip6_finish_output (1 samples, 1.00%)</title><rect x="375.8" y="136" width="11.8" height="10.0" fill="rgb(252,84,5)" rx="2" ry="2" />
<text  x="378.80" y="144" ></text>
</g>
<g >
<title>netif_receive_skb (8 samples, 8.00%)</title><rect x="1060.2" y="268" width="94.4" height="10.0" fill="rgb(217,175,24)" rx="2" ry="2" />
<text  x="1063.20" y="276" >netif_recei..</text>
</g>
<g >
<title>irq_exit (27 samples, 27.00%)</title><rect x="836.0" y="323" width="318.6" height="10.0" fill="rgb(227,127,30)" rx="2" ry="2" />
<text  x="839.00" y="331" >irq_exit</text>
</g>
<g >
<title>_perf_event_enable (4 samples, 4.00%)</title><rect x="33.6" y="235" width="47.2" height="10.0" fill="rgb(221,75,40)" rx="2" ry="2" />
<text  x="36.60" y="243" >_per..</text>
</g>
<g >
<title>ksys_read (1 samples, 1.00%)</title><rect x="21.8" y="290" width="11.8" height="10.0" fill="rgb(230,118,41)" rx="2" ry="2" />
<text  x="24.80" y="298" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 1.00%)</title><rect x="1107.4" y="136" width="11.8" height="10.0" fill="rgb(236,221,40)" rx="2" ry="2" />
<text  x="1110.40" y="144" ></text>
</g>
<g >
<title>rcu_gp_kthread (3 samples, 3.00%)</title><rect x="80.8" y="400" width="35.4" height="10.0" fill="rgb(221,4,27)" rx="2" ry="2" />
<text  x="83.80" y="408" >rc..</text>
</g>
<g >
<title>napi_complete_done (2 samples, 2.00%)</title><rect x="942.2" y="268" width="23.6" height="10.0" fill="rgb(238,167,6)" rx="2" ry="2" />
<text  x="945.20" y="276" >n..</text>
</g>
<g >
<title>dev_queue_xmit_nit (1 samples, 1.00%)</title><rect x="1107.4" y="114" width="11.8" height="10.0" fill="rgb(209,143,21)" rx="2" ry="2" />
<text  x="1110.40" y="122" ></text>
</g>
<g >
<title>call_timer_fn.isra.34 (2 samples, 2.00%)</title><rect x="1024.8" y="290" width="23.6" height="10.0" fill="rgb(245,65,3)" rx="2" ry="2" />
<text  x="1027.80" y="298" >c..</text>
</g>
<g >
<title>cake_hash (1 samples, 1.00%)</title><rect x="954.0" y="136" width="11.8" height="10.0" fill="rgb(250,112,45)" rx="2" ry="2" />
<text  x="957.00" y="144" ></text>
</g>
<g >
<title>gc_worker (1 samples, 1.00%)</title><rect x="10.0" y="378" width="11.8" height="10.0" fill="rgb(251,113,20)" rx="2" ry="2" />
<text  x="13.00" y="386" ></text>
</g>
<g >
<title>__noinstr_text_start (66 samples, 66.00%)</title><rect x="387.6" y="400" width="778.8" height="10.0" fill="rgb(206,54,34)" rx="2" ry="2" />
<text  x="390.60" y="408" >__noinstr_text_start</text>
</g>
<g >
<title>ip_output (2 samples, 2.00%)</title><rect x="1060.2" y="191" width="23.6" height="10.0" fill="rgb(213,192,22)" rx="2" ry="2" />
<text  x="1063.20" y="199" >i..</text>
</g>
<g >
<title>usb_stor_invoke_transport (2 samples, 2.00%)</title><rect x="1166.4" y="378" width="23.6" height="10.0" fill="rgb(218,148,52)" rx="2" ry="2" />
<text  x="1169.40" y="386" >u..</text>
</g>
<g >
<title>nf_hook_slow (1 samples, 1.00%)</title><rect x="1083.8" y="224" width="11.8" height="10.0" fill="rgb(229,130,37)" rx="2" ry="2" />
<text  x="1086.80" y="232" ></text>
</g>
<g >
<title>__handle_domain_irq (1 samples, 1.00%)</title><rect x="364.0" y="356" width="11.8" height="10.0" fill="rgb(206,87,9)" rx="2" ry="2" />
<text  x="367.00" y="364" ></text>
</g>
<g >
<title>[libc.so] (1 samples, 1.00%)</title><rect x="128.0" y="356" width="11.8" height="10.0" fill="rgb(244,23,49)" rx="2" ry="2" />
<text  x="131.00" y="364" ></text>
</g>
<g >
<title>call_timer_fn.isra.34 (1 samples, 1.00%)</title><rect x="364.0" y="312" width="11.8" height="10.0" fill="rgb(228,94,13)" rx="2" ry="2" />
<text  x="367.00" y="320" ></text>
</g>
<g >
<title>[libc.so] (1 samples, 1.00%)</title><rect x="128.0" y="345" width="11.8" height="10.0" fill="rgb(250,11,35)" rx="2" ry="2" />
<text  x="131.00" y="353" ></text>
</g>
<g >
<title>__napi_poll (1 samples, 1.00%)</title><rect x="375.8" y="312" width="11.8" height="10.0" fill="rgb(218,8,11)" rx="2" ry="2" />
<text  x="378.80" y="320" ></text>
</g>
<g >
<title>filldir64 (1 samples, 1.00%)</title><rect x="163.4" y="268" width="11.8" height="10.0" fill="rgb(240,197,33)" rx="2" ry="2" />
<text  x="166.40" y="276" ></text>
</g>
<g >
<title>walk_component (1 samples, 1.00%)</title><rect x="175.2" y="279" width="11.8" height="10.0" fill="rgb(237,12,6)" rx="2" ry="2" />
<text  x="178.20" y="287" ></text>
</g>
<g >
<title>tasklet_action_common.isra.19 (9 samples, 9.00%)</title><rect x="1048.4" y="290" width="106.2" height="10.0" fill="rgb(253,65,30)" rx="2" ry="2" />
<text  x="1051.40" y="298" >tasklet_actio..</text>
</g>
<g >
<title>__dev_queue_xmit (2 samples, 2.00%)</title><rect x="942.2" y="158" width="23.6" height="10.0" fill="rgb(221,34,19)" rx="2" ry="2" />
<text  x="945.20" y="166" >_..</text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 1.00%)</title><rect x="1072.0" y="48" width="11.8" height="10.0" fill="rgb(237,125,17)" rx="2" ry="2" />
<text  x="1075.00" y="56" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 1.00%)</title><rect x="977.6" y="290" width="11.8" height="10.0" fill="rgb(207,218,16)" rx="2" ry="2" />
<text  x="980.60" y="298" ></text>
</g>
<g >
<title>_perf_ioctl (4 samples, 4.00%)</title><rect x="33.6" y="257" width="47.2" height="10.0" fill="rgb(207,132,46)" rx="2" ry="2" />
<text  x="36.60" y="265" >_per..</text>
</g>
<g >
<title>__netif_receive_skb (3 samples, 3.00%)</title><rect x="906.8" y="191" width="35.4" height="10.0" fill="rgb(206,37,30)" rx="2" ry="2" />
<text  x="909.80" y="199" >__..</text>
</g>
<g >
<title>arp_xmit (1 samples, 1.00%)</title><rect x="364.0" y="257" width="11.8" height="10.0" fill="rgb(241,89,10)" rx="2" ry="2" />
<text  x="367.00" y="265" ></text>
</g>
<g >
<title>ifb_ri_tasklet (8 samples, 8.00%)</title><rect x="1060.2" y="279" width="94.4" height="10.0" fill="rgb(243,35,16)" rx="2" ry="2" />
<text  x="1063.20" y="287" >ifb_ri_task..</text>
</g>
<g >
<title>handle_IPI (1 samples, 1.00%)</title><rect x="375.8" y="356" width="11.8" height="10.0" fill="rgb(248,218,18)" rx="2" ry="2" />
<text  x="378.80" y="364" ></text>
</g>
<g >
<title>nf_nat_inet_fn (1 samples, 1.00%)</title><rect x="1083.8" y="191" width="11.8" height="10.0" fill="rgb(246,189,44)" rx="2" ry="2" />
<text  x="1086.80" y="199" ></text>
</g>
<g >
<title>net_rx_action (8 samples, 8.00%)</title><rect x="871.4" y="301" width="94.4" height="10.0" fill="rgb(246,225,28)" rx="2" ry="2" />
<text  x="874.40" y="309" >net_rx_action</text>
</g>
<g >
<title>sh (6 samples, 6.00%)</title><rect x="187.0" y="433" width="70.8" height="10.0" fill="rgb(236,72,1)" rx="2" ry="2" />
<text  x="190.00" y="441" >sh</text>
</g>
<g >
<title>[unknown] (6 samples, 6.00%)</title><rect x="116.2" y="422" width="70.8" height="10.0" fill="rgb(228,34,16)" rx="2" ry="2" />
<text  x="119.20" y="430" >[unknown]</text>
</g>
<g >
<title>br_forward (1 samples, 1.00%)</title><rect x="1072.0" y="103" width="11.8" height="10.0" fill="rgb(222,223,18)" rx="2" ry="2" />
<text  x="1075.00" y="111" ></text>
</g>
<g >
<title>ip6table_mangle_hook (1 samples, 1.00%)</title><rect x="1142.8" y="191" width="11.8" height="10.0" fill="rgb(232,24,25)" rx="2" ry="2" />
<text  x="1145.80" y="199" ></text>
</g>
<g >
<title>[libc.so] (6 samples, 6.00%)</title><rect x="116.2" y="400" width="70.8" height="10.0" fill="rgb(245,120,32)" rx="2" ry="2" />
<text  x="119.20" y="408" >[libc.so]</text>
</g>
<g >
<title>rcu_sched (3 samples, 3.00%)</title><rect x="80.8" y="433" width="35.4" height="10.0" fill="rgb(227,94,40)" rx="2" ry="2" />
<text  x="83.80" y="441" >rc..</text>
</g>
<g >
<title>gro_normal_one (1 samples, 1.00%)</title><rect x="883.2" y="268" width="11.8" height="10.0" fill="rgb(224,143,8)" rx="2" ry="2" />
<text  x="886.20" y="276" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (2 samples, 2.00%)</title><rect x="942.2" y="246" width="23.6" height="10.0" fill="rgb(242,164,11)" rx="2" ry="2" />
<text  x="945.20" y="254" >n..</text>
</g>
<g >
<title>filldir64 (2 samples, 2.00%)</title><rect x="139.8" y="268" width="23.6" height="10.0" fill="rgb(214,198,33)" rx="2" ry="2" />
<text  x="142.80" y="276" >f..</text>
</g>
<g >
<title>ip_finish_output2 (2 samples, 2.00%)</title><rect x="1060.2" y="158" width="23.6" height="10.0" fill="rgb(230,24,39)" rx="2" ry="2" />
<text  x="1063.20" y="166" >i..</text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 1.00%)</title><rect x="364.0" y="246" width="11.8" height="10.0" fill="rgb(239,6,42)" rx="2" ry="2" />
<text  x="367.00" y="254" ></text>
</g>
<g >
<title>br_forward_finish (1 samples, 1.00%)</title><rect x="1072.0" y="81" width="11.8" height="10.0" fill="rgb(224,20,35)" rx="2" ry="2" />
<text  x="1075.00" y="89" ></text>
</g>
<g >
<title>[perf] (5 samples, 5.00%)</title><rect x="21.8" y="367" width="59.0" height="10.0" fill="rgb(216,120,3)" rx="2" ry="2" />
<text  x="24.80" y="375" >[perf]</text>
</g>
<g >
<title>__ip_finish_output (1 samples, 1.00%)</title><rect x="906.8" y="103" width="11.8" height="10.0" fill="rgb(244,226,19)" rx="2" ry="2" />
<text  x="909.80" y="111" ></text>
</g>
<g >
<title>ksys_ioctl (4 samples, 4.00%)</title><rect x="33.6" y="290" width="47.2" height="10.0" fill="rgb(207,195,2)" rx="2" ry="2" />
<text  x="36.60" y="298" >ksys..</text>
</g>
<g >
<title>generic_exec_single (4 samples, 4.00%)</title><rect x="33.6" y="202" width="47.2" height="10.0" fill="rgb(212,137,53)" rx="2" ry="2" />
<text  x="36.60" y="210" >gene..</text>
</g>
<g >
<title>usb_stor_control_thread (2 samples, 2.00%)</title><rect x="1166.4" y="400" width="23.6" height="10.0" fill="rgb(218,165,42)" rx="2" ry="2" />
<text  x="1169.40" y="408" >u..</text>
</g>
<g >
<title>arch_local_irq_restore (1 samples, 1.00%)</title><rect x="1036.6" y="257" width="11.8" height="10.0" fill="rgb(212,73,43)" rx="2" ry="2" />
<text  x="1039.60" y="265" ></text>
</g>
<g >
<title>dev_gro_receive (1 samples, 1.00%)</title><rect x="895.0" y="257" width="11.8" height="10.0" fill="rgb(223,84,7)" rx="2" ry="2" />
<text  x="898.00" y="265" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 1.00%)</title><rect x="375.8" y="103" width="11.8" height="10.0" fill="rgb(215,167,54)" rx="2" ry="2" />
<text  x="378.80" y="111" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 1.00%)</title><rect x="375.8" y="213" width="11.8" height="10.0" fill="rgb(234,136,47)" rx="2" ry="2" />
<text  x="378.80" y="221" ></text>
</g>
<g >
<title>nf_hook_slow (2 samples, 2.00%)</title><rect x="1131.0" y="202" width="23.6" height="10.0" fill="rgb(243,170,25)" rx="2" ry="2" />
<text  x="1134.00" y="210" >n..</text>
</g>
<g >
<title>ip_set_test (1 samples, 1.00%)</title><rect x="918.6" y="81" width="11.8" height="10.0" fill="rgb(215,69,35)" rx="2" ry="2" />
<text  x="921.60" y="89" ></text>
</g>
<g >
<title>ip6_rcv_finish (1 samples, 1.00%)</title><rect x="375.8" y="180" width="11.8" height="10.0" fill="rgb(237,9,44)" rx="2" ry="2" />
<text  x="378.80" y="188" ></text>
</g>
<g >
<title>kthread (2 samples, 2.00%)</title><rect x="1166.4" y="411" width="23.6" height="10.0" fill="rgb(208,11,35)" rx="2" ry="2" />
<text  x="1169.40" y="419" >k..</text>
</g>
<g >
<title>nf_nat_manip_pkt (1 samples, 1.00%)</title><rect x="1083.8" y="169" width="11.8" height="10.0" fill="rgb(225,104,49)" rx="2" ry="2" />
<text  x="1086.80" y="177" ></text>
</g>
<g >
<title>all (100 samples, 100%)</title><rect x="10.0" y="444" width="1180.0" height="10.0" fill="rgb(247,130,32)" rx="2" ry="2" />
<text  x="13.00" y="452" ></text>
</g>
<g >
<title>proc_single_show (1 samples, 1.00%)</title><rect x="21.8" y="246" width="11.8" height="10.0" fill="rgb(250,109,20)" rx="2" ry="2" />
<text  x="24.80" y="254" ></text>
</g>
<g >
<title>br_dev_xmit (1 samples, 1.00%)</title><rect x="1072.0" y="114" width="11.8" height="10.0" fill="rgb(254,127,48)" rx="2" ry="2" />
<text  x="1075.00" y="122" ></text>
</g>
<g >
<title>vfs_read (1 samples, 1.00%)</title><rect x="21.8" y="279" width="11.8" height="10.0" fill="rgb(246,68,10)" rx="2" ry="2" />
<text  x="24.80" y="287" ></text>
</g>
<g >
<title>tcpmss_tg6 (1 samples, 1.00%)</title><rect x="1142.8" y="169" width="11.8" height="10.0" fill="rgb(242,194,17)" rx="2" ry="2" />
<text  x="1145.80" y="177" ></text>
</g>
<g >
<title>validate_xmit_skb_list (1 samples, 1.00%)</title><rect x="1072.0" y="37" width="11.8" height="10.0" fill="rgb(211,222,36)" rx="2" ry="2" />
<text  x="1075.00" y="45" ></text>
</g>
<g >
<title>rcu_idle_exit (1 samples, 1.00%)</title><rect x="1154.6" y="367" width="11.8" height="10.0" fill="rgb(247,15,52)" rx="2" ry="2" />
<text  x="1157.60" y="375" ></text>
</g>
<g >
<title>__ip6_finish_output (1 samples, 1.00%)</title><rect x="1107.4" y="180" width="11.8" height="10.0" fill="rgb(206,62,26)" rx="2" ry="2" />
<text  x="1110.40" y="188" ></text>
</g>
<g >
<title>cake_enqueue (2 samples, 2.00%)</title><rect x="942.2" y="147" width="23.6" height="10.0" fill="rgb(217,80,47)" rx="2" ry="2" />
<text  x="945.20" y="155" >c..</text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 1.00%)</title><rect x="906.8" y="70" width="11.8" height="10.0" fill="rgb(223,163,4)" rx="2" ry="2" />
<text  x="909.80" y="78" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 1.00%)</title><rect x="930.4" y="136" width="11.8" height="10.0" fill="rgb(237,162,36)" rx="2" ry="2" />
<text  x="933.40" y="144" ></text>
</g>
<g >
<title>arch_cpu_idle (65 samples, 65.00%)</title><rect x="387.6" y="367" width="767.0" height="10.0" fill="rgb(205,172,2)" rx="2" ry="2" />
<text  x="390.60" y="375" >arch_cpu_idle</text>
</g>
<g >
<title>mod_timer (1 samples, 1.00%)</title><rect x="1024.8" y="268" width="11.8" height="10.0" fill="rgb(210,180,26)" rx="2" ry="2" />
<text  x="1027.80" y="276" ></text>
</g>
<g >
<title>ip6_finish_output2 (1 samples, 1.00%)</title><rect x="375.8" y="125" width="11.8" height="10.0" fill="rgb(222,152,9)" rx="2" ry="2" />
<text  x="378.80" y="133" ></text>
</g>
<g >
<title>ip6t_do_table (1 samples, 1.00%)</title><rect x="1131.0" y="180" width="11.8" height="10.0" fill="rgb(221,115,37)" rx="2" ry="2" />
<text  x="1134.00" y="188" ></text>
</g>
<g >
<title>usb_sg_init (1 samples, 1.00%)</title><rect x="1166.4" y="334" width="11.8" height="10.0" fill="rgb(210,185,48)" rx="2" ry="2" />
<text  x="1169.40" y="342" ></text>
</g>
<g >
<title>__softirqentry_text_start (27 samples, 27.00%)</title><rect x="836.0" y="312" width="318.6" height="10.0" fill="rgb(225,218,37)" rx="2" ry="2" />
<text  x="839.00" y="320" >__softirqentry_text_start</text>
</g>
<g >
<title>netif_receive_skb (1 samples, 1.00%)</title><rect x="375.8" y="224" width="11.8" height="10.0" fill="rgb(229,144,27)" rx="2" ry="2" />
<text  x="378.80" y="232" ></text>
</g>
<g >
<title>kthread (1 samples, 1.00%)</title><rect x="10.0" y="411" width="11.8" height="10.0" fill="rgb(246,163,47)" rx="2" ry="2" />
<text  x="13.00" y="419" ></text>
</g>
<g >
<title>xhci_urb_enqueue (1 samples, 1.00%)</title><rect x="1048.4" y="246" width="11.8" height="10.0" fill="rgb(237,215,19)" rx="2" ry="2" />
<text  x="1051.40" y="254" ></text>
</g>
<g >
<title>usb_sg_wait (1 samples, 1.00%)</title><rect x="1178.2" y="334" width="11.8" height="10.0" fill="rgb(243,129,3)" rx="2" ry="2" />
<text  x="1181.20" y="342" ></text>
</g>
<g >
<title>event_function_call (4 samples, 4.00%)</title><rect x="33.6" y="224" width="47.2" height="10.0" fill="rgb(226,65,28)" rx="2" ry="2" />
<text  x="36.60" y="232" >even..</text>
</g>
<g >
<title>cpu_startup_entry (11 samples, 11.00%)</title><rect x="257.8" y="411" width="129.8" height="10.0" fill="rgb(242,115,42)" rx="2" ry="2" />
<text  x="260.80" y="419" >cpu_startup_entry</text>
</g>
<g >
<title>[libc.so] (1 samples, 1.00%)</title><rect x="21.8" y="334" width="11.8" height="10.0" fill="rgb(241,49,23)" rx="2" ry="2" />
<text  x="24.80" y="342" ></text>
</g>
<g >
<title>br_handle_frame_finish (1 samples, 1.00%)</title><rect x="375.8" y="246" width="11.8" height="10.0" fill="rgb(211,215,12)" rx="2" ry="2" />
<text  x="378.80" y="254" ></text>
</g>
<g >
<title>el0_svc_handler (1 samples, 1.00%)</title><rect x="21.8" y="312" width="11.8" height="10.0" fill="rgb(217,95,35)" rx="2" ry="2" />
<text  x="24.80" y="320" ></text>
</g>
<g >
<title>xhci_urb_enqueue (1 samples, 1.00%)</title><rect x="1178.2" y="301" width="11.8" height="10.0" fill="rgb(220,6,9)" rx="2" ry="2" />
<text  x="1181.20" y="309" ></text>
</g>
<g >
<title>gro_normal_list.part.177 (2 samples, 2.00%)</title><rect x="942.2" y="257" width="23.6" height="10.0" fill="rgb(254,82,29)" rx="2" ry="2" />
<text  x="945.20" y="265" >g..</text>
</g>
<g >
<title>el0_svc_handler (1 samples, 1.00%)</title><rect x="128.0" y="323" width="11.8" height="10.0" fill="rgb(251,141,19)" rx="2" ry="2" />
<text  x="131.00" y="331" ></text>
</g>
<g >
<title>seq_put_hex_ll (1 samples, 1.00%)</title><rect x="21.8" y="213" width="11.8" height="10.0" fill="rgb(215,14,11)" rx="2" ry="2" />
<text  x="24.80" y="221" ></text>
</g>
<g >
<title>[libc.so] (4 samples, 4.00%)</title><rect x="33.6" y="334" width="47.2" height="10.0" fill="rgb(208,73,36)" rx="2" ry="2" />
<text  x="36.60" y="342" >[lib..</text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 1.00%)</title><rect x="906.8" y="158" width="11.8" height="10.0" fill="rgb(237,53,29)" rx="2" ry="2" />
<text  x="909.80" y="166" ></text>
</g>
<g >
<title>br_pass_frame_up (1 samples, 1.00%)</title><rect x="375.8" y="235" width="11.8" height="10.0" fill="rgb(212,153,7)" rx="2" ry="2" />
<text  x="378.80" y="243" ></text>
</g>
<g >
<title>schedule_timeout (2 samples, 2.00%)</title><rect x="92.6" y="389" width="23.6" height="10.0" fill="rgb(231,83,34)" rx="2" ry="2" />
<text  x="95.60" y="397" >s..</text>
</g>
<g >
<title>el1_irq (2 samples, 2.00%)</title><rect x="364.0" y="378" width="23.6" height="10.0" fill="rgb(250,145,26)" rx="2" ry="2" />
<text  x="367.00" y="386" >e..</text>
</g>
<g >
<title>[libc.so] (1 samples, 1.00%)</title><rect x="21.8" y="345" width="11.8" height="10.0" fill="rgb(245,16,41)" rx="2" ry="2" />
<text  x="24.80" y="353" ></text>
</g>
<g >
<title>do_vfs_ioctl (4 samples, 4.00%)</title><rect x="33.6" y="279" width="47.2" height="10.0" fill="rgb(254,75,38)" rx="2" ry="2" />
<text  x="36.60" y="287" >do_v..</text>
</g>
<g >
<title>br_pass_frame_up (3 samples, 3.00%)</title><rect x="906.8" y="213" width="35.4" height="10.0" fill="rgb(215,224,6)" rx="2" ry="2" />
<text  x="909.80" y="221" >br..</text>
</g>
<g >
<title>cake_enqueue (1 samples, 1.00%)</title><rect x="906.8" y="59" width="11.8" height="10.0" fill="rgb(244,219,31)" rx="2" ry="2" />
<text  x="909.80" y="67" ></text>
</g>
<g >
<title>ip_rcv (3 samples, 3.00%)</title><rect x="1060.2" y="235" width="35.4" height="10.0" fill="rgb(216,170,41)" rx="2" ry="2" />
<text  x="1063.20" y="243" >ip_..</text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 1.00%)</title><rect x="906.8" y="81" width="11.8" height="10.0" fill="rgb(218,86,51)" rx="2" ry="2" />
<text  x="909.80" y="89" ></text>
</g>
<g >
<title>proc_fill_cache (2 samples, 2.00%)</title><rect x="139.8" y="279" width="23.6" height="10.0" fill="rgb(240,8,6)" rx="2" ry="2" />
<text  x="142.80" y="287" >p..</text>
</g>
<g >
<title>ip6_forward (5 samples, 5.00%)</title><rect x="1095.6" y="213" width="59.0" height="10.0" fill="rgb(237,7,42)" rx="2" ry="2" />
<text  x="1098.60" y="221" >ip6_fo..</text>
</g>
<g >
<title>[busybox] (1 samples, 1.00%)</title><rect x="222.4" y="400" width="11.8" height="10.0" fill="rgb(216,97,43)" rx="2" ry="2" />
<text  x="225.40" y="408" ></text>
</g>
<g >
<title>conntrack_mt (1 samples, 1.00%)</title><rect x="930.4" y="92" width="11.8" height="10.0" fill="rgb(225,113,13)" rx="2" ry="2" />
<text  x="933.40" y="100" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 1.00%)</title><rect x="906.8" y="114" width="11.8" height="10.0" fill="rgb(208,229,40)" rx="2" ry="2" />
<text  x="909.80" y="122" ></text>
</g>
<g >
<title>ip_forward (1 samples, 1.00%)</title><rect x="906.8" y="147" width="11.8" height="10.0" fill="rgb(253,228,29)" rx="2" ry="2" />
<text  x="909.80" y="155" ></text>
</g>
<g >
<title>ip6_rcv_finish (5 samples, 5.00%)</title><rect x="1095.6" y="224" width="59.0" height="10.0" fill="rgb(219,67,35)" rx="2" ry="2" />
<text  x="1098.60" y="232" >ip6_rc..</text>
</g>
<g >
<title>wake_up_process (1 samples, 1.00%)</title><rect x="1036.6" y="268" width="11.8" height="10.0" fill="rgb(246,112,33)" rx="2" ry="2" />
<text  x="1039.60" y="276" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 1.00%)</title><rect x="364.0" y="323" width="11.8" height="10.0" fill="rgb(215,192,20)" rx="2" ry="2" />
<text  x="367.00" y="331" ></text>
</g>
<g >
<title>perf_ioctl (4 samples, 4.00%)</title><rect x="33.6" y="268" width="47.2" height="10.0" fill="rgb(211,97,23)" rx="2" ry="2" />
<text  x="36.60" y="276" >perf..</text>
</g>
<g >
<title>ip6t_do_table (1 samples, 1.00%)</title><rect x="918.6" y="103" width="11.8" height="10.0" fill="rgb(232,8,7)" rx="2" ry="2" />
<text  x="921.60" y="111" ></text>
</g>
<g >
<title>ipv6_gro_receive (1 samples, 1.00%)</title><rect x="895.0" y="246" width="11.8" height="10.0" fill="rgb(216,223,24)" rx="2" ry="2" />
<text  x="898.00" y="254" ></text>
</g>
<g >
<title>[cpu.so] (1 samples, 1.00%)</title><rect x="116.2" y="378" width="11.8" height="10.0" fill="rgb(236,141,42)" rx="2" ry="2" />
<text  x="119.20" y="386" ></text>
</g>
<g >
<title>process_timeout (1 samples, 1.00%)</title><rect x="1036.6" y="279" width="11.8" height="10.0" fill="rgb(240,139,43)" rx="2" ry="2" />
<text  x="1039.60" y="287" ></text>
</g>
<g >
<title>kthread (3 samples, 3.00%)</title><rect x="80.8" y="411" width="35.4" height="10.0" fill="rgb(212,156,39)" rx="2" ry="2" />
<text  x="83.80" y="419" >kt..</text>
</g>
<g >
<title>usb-storage (2 samples, 2.00%)</title><rect x="1166.4" y="433" width="23.6" height="10.0" fill="rgb(249,168,48)" rx="2" ry="2" />
<text  x="1169.40" y="441" >u..</text>
</g>
<g >
<title>bcmgenet_rx_poll (2 samples, 2.00%)</title><rect x="883.2" y="279" width="23.6" height="10.0" fill="rgb(218,152,54)" rx="2" ry="2" />
<text  x="886.20" y="287" >b..</text>
</g>
<g >
<title>[libc.so] (6 samples, 6.00%)</title><rect x="116.2" y="411" width="70.8" height="10.0" fill="rgb(242,155,48)" rx="2" ry="2" />
<text  x="119.20" y="419" >[libc.so]</text>
</g>
<g >
<title>do_filp_open (1 samples, 1.00%)</title><rect x="175.2" y="312" width="11.8" height="10.0" fill="rgb(232,65,45)" rx="2" ry="2" />
<text  x="178.20" y="320" ></text>
</g>
<g >
<title>[perf] (5 samples, 5.00%)</title><rect x="21.8" y="356" width="59.0" height="10.0" fill="rgb(221,215,53)" rx="2" ry="2" />
<text  x="24.80" y="364" >[perf]</text>
</g>
<g >
<title>__br_forward (1 samples, 1.00%)</title><rect x="1072.0" y="92" width="11.8" height="10.0" fill="rgb(230,124,34)" rx="2" ry="2" />
<text  x="1075.00" y="100" ></text>
</g>
<g >
<title>__arm64_sys_read (1 samples, 1.00%)</title><rect x="128.0" y="312" width="11.8" height="10.0" fill="rgb(219,14,37)" rx="2" ry="2" />
<text  x="131.00" y="320" ></text>
</g>
<g >
<title>[libc.so] (2 samples, 2.00%)</title><rect x="234.2" y="400" width="23.6" height="10.0" fill="rgb(236,64,15)" rx="2" ry="2" />
<text  x="237.20" y="408" >[..</text>
</g>
<g >
<title>seq_read (1 samples, 1.00%)</title><rect x="128.0" y="268" width="11.8" height="10.0" fill="rgb(222,108,51)" rx="2" ry="2" />
<text  x="131.00" y="276" ></text>
</g>
<g >
<title>cake_hash (1 samples, 1.00%)</title><rect x="375.8" y="81" width="11.8" height="10.0" fill="rgb(212,166,19)" rx="2" ry="2" />
<text  x="378.80" y="89" ></text>
</g>
<g >
<title>dev_queue_xmit (2 samples, 2.00%)</title><rect x="1060.2" y="147" width="23.6" height="10.0" fill="rgb(217,91,34)" rx="2" ry="2" />
<text  x="1063.20" y="155" >d..</text>
</g>
<g >
<title>[unknown] (6 samples, 6.00%)</title><rect x="187.0" y="422" width="70.8" height="10.0" fill="rgb(249,134,14)" rx="2" ry="2" />
<text  x="190.00" y="430" >[unknown]</text>
</g>
<g >
<title>render_cap_t (1 samples, 1.00%)</title><rect x="21.8" y="224" width="11.8" height="10.0" fill="rgb(222,115,7)" rx="2" ry="2" />
<text  x="24.80" y="232" ></text>
</g>
<g >
<title>arp_solicit (1 samples, 1.00%)</title><rect x="364.0" y="279" width="11.8" height="10.0" fill="rgb(252,43,47)" rx="2" ry="2" />
<text  x="367.00" y="287" ></text>
</g>
<g >
<title>ip6_rcv_finish (2 samples, 2.00%)</title><rect x="918.6" y="158" width="23.6" height="10.0" fill="rgb(206,192,38)" rx="2" ry="2" />
<text  x="921.60" y="166" >i..</text>
</g>
<g >
<title>ip_forward (2 samples, 2.00%)</title><rect x="1060.2" y="213" width="23.6" height="10.0" fill="rgb(239,135,42)" rx="2" ry="2" />
<text  x="1063.20" y="221" >i..</text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 1.00%)</title><rect x="1107.4" y="147" width="11.8" height="10.0" fill="rgb(249,190,42)" rx="2" ry="2" />
<text  x="1110.40" y="155" ></text>
</g>
<g >
<title>bottom_half (1 samples, 1.00%)</title><rect x="1048.4" y="279" width="11.8" height="10.0" fill="rgb(212,145,23)" rx="2" ry="2" />
<text  x="1051.40" y="287" ></text>
</g>
<g >
<title>kmalloc_slab (1 samples, 1.00%)</title><rect x="1048.4" y="235" width="11.8" height="10.0" fill="rgb(250,205,11)" rx="2" ry="2" />
<text  x="1051.40" y="243" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 1.00%)</title><rect x="1072.0" y="125" width="11.8" height="10.0" fill="rgb(210,13,44)" rx="2" ry="2" />
<text  x="1075.00" y="133" ></text>
</g>
<g >
<title>smp_call_function_single (4 samples, 4.00%)</title><rect x="33.6" y="213" width="47.2" height="10.0" fill="rgb(254,117,26)" rx="2" ry="2" />
<text  x="36.60" y="221" >smp_..</text>
</g>
<g >
<title>worker_thread (1 samples, 1.00%)</title><rect x="10.0" y="400" width="11.8" height="10.0" fill="rgb(209,115,16)" rx="2" ry="2" />
<text  x="13.00" y="408" ></text>
</g>
<g >
<title>start_kernel (66 samples, 66.00%)</title><rect x="387.6" y="422" width="778.8" height="10.0" fill="rgb(207,90,12)" rx="2" ry="2" />
<text  x="390.60" y="430" >start_kernel</text>
</g>
<g >
<title>el0_svc_handler (4 samples, 4.00%)</title><rect x="33.6" y="312" width="47.2" height="10.0" fill="rgb(214,116,35)" rx="2" ry="2" />
<text  x="36.60" y="320" >el0_..</text>
</g>
<g >
<title>proc_single_show (1 samples, 1.00%)</title><rect x="128.0" y="257" width="11.8" height="10.0" fill="rgb(217,37,32)" rx="2" ry="2" />
<text  x="131.00" y="265" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (3 samples, 3.00%)</title><rect x="906.8" y="257" width="35.4" height="10.0" fill="rgb(251,72,53)" rx="2" ry="2" />
<text  x="909.80" y="265" >__..</text>
</g>
<g >
<title>__arm64_sys_ioctl (4 samples, 4.00%)</title><rect x="33.6" y="301" width="47.2" height="10.0" fill="rgb(222,6,25)" rx="2" ry="2" />
<text  x="36.60" y="309" >__ar..</text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 2.00%)</title><rect x="977.6" y="301" width="23.6" height="10.0" fill="rgb(209,145,11)" rx="2" ry="2" />
<text  x="980.60" y="309" >r..</text>
</g>
<g >
<title>proc_root_readdir (3 samples, 3.00%)</title><rect x="139.8" y="301" width="35.4" height="10.0" fill="rgb(223,170,1)" rx="2" ry="2" />
<text  x="142.80" y="309" >pro..</text>
</g>
<g >
<title>usb_stor_bulk_transfer_sglist.part.5 (2 samples, 2.00%)</title><rect x="1166.4" y="345" width="23.6" height="10.0" fill="rgb(250,104,51)" rx="2" ry="2" />
<text  x="1169.40" y="353" >u..</text>
</g>
<g >
<title>ret_from_fork (2 samples, 2.00%)</title><rect x="1166.4" y="422" width="23.6" height="10.0" fill="rgb(238,223,32)" rx="2" ry="2" />
<text  x="1169.40" y="430" >r..</text>
</g>
<g >
<title>br_dev_queue_push_xmit (1 samples, 1.00%)</title><rect x="1072.0" y="70" width="11.8" height="10.0" fill="rgb(242,224,26)" rx="2" ry="2" />
<text  x="1075.00" y="78" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 1.00%)</title><rect x="906.8" y="169" width="11.8" height="10.0" fill="rgb(238,191,9)" rx="2" ry="2" />
<text  x="909.80" y="177" ></text>
</g>
<g >
<title>ip6_finish_output (1 samples, 1.00%)</title><rect x="375.8" y="147" width="11.8" height="10.0" fill="rgb(246,70,34)" rx="2" ry="2" />
<text  x="378.80" y="155" ></text>
</g>
<g >
<title>tcf_action_exec (2 samples, 2.00%)</title><rect x="942.2" y="191" width="23.6" height="10.0" fill="rgb(248,67,42)" rx="2" ry="2" />
<text  x="945.20" y="199" >t..</text>
</g>
<g >
<title>el0_svc (4 samples, 4.00%)</title><rect x="33.6" y="323" width="47.2" height="10.0" fill="rgb(240,90,13)" rx="2" ry="2" />
<text  x="36.60" y="331" >el0_..</text>
</g>
<g >
<title>rcu_core (1 samples, 1.00%)</title><rect x="965.8" y="290" width="11.8" height="10.0" fill="rgb(244,4,39)" rx="2" ry="2" />
<text  x="968.80" y="298" ></text>
</g>
<g >
<title>irq_exit (1 samples, 1.00%)</title><rect x="364.0" y="345" width="11.8" height="10.0" fill="rgb(209,98,21)" rx="2" ry="2" />
<text  x="367.00" y="353" ></text>
</g>
<g >
<title>ip6table_mangle_hook (1 samples, 1.00%)</title><rect x="1119.2" y="180" width="11.8" height="10.0" fill="rgb(226,146,51)" rx="2" ry="2" />
<text  x="1122.20" y="188" ></text>
</g>
<g >
<title>ip6_finish_output2 (1 samples, 1.00%)</title><rect x="1107.4" y="169" width="11.8" height="10.0" fill="rgb(248,54,47)" rx="2" ry="2" />
<text  x="1110.40" y="177" ></text>
</g>
<g >
<title>group_balance_cpu (1 samples, 1.00%)</title><rect x="977.6" y="279" width="11.8" height="10.0" fill="rgb(234,95,10)" rx="2" ry="2" />
<text  x="980.60" y="287" ></text>
</g>
<g >
<title>neigh_probe (1 samples, 1.00%)</title><rect x="364.0" y="290" width="11.8" height="10.0" fill="rgb(219,56,38)" rx="2" ry="2" />
<text  x="367.00" y="298" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 1.00%)</title><rect x="906.8" y="92" width="11.8" height="10.0" fill="rgb(220,53,14)" rx="2" ry="2" />
<text  x="909.80" y="100" ></text>
</g>
<g >
<title>ip6_output (1 samples, 1.00%)</title><rect x="918.6" y="136" width="11.8" height="10.0" fill="rgb(210,188,32)" rx="2" ry="2" />
<text  x="921.60" y="144" ></text>
</g>
<g >
<title>proc_pid_status (1 samples, 1.00%)</title><rect x="21.8" y="235" width="11.8" height="10.0" fill="rgb(225,99,46)" rx="2" ry="2" />
<text  x="24.80" y="243" ></text>
</g>
<g >
<title>proc_readdir (1 samples, 1.00%)</title><rect x="163.4" y="290" width="11.8" height="10.0" fill="rgb(220,64,3)" rx="2" ry="2" />
<text  x="166.40" y="298" ></text>
</g>
<g >
<title>queue_delayed_work_on (1 samples, 1.00%)</title><rect x="10.0" y="367" width="11.8" height="10.0" fill="rgb(224,136,32)" rx="2" ry="2" />
<text  x="13.00" y="375" ></text>
</g>
<g >
<title>seq_read (1 samples, 1.00%)</title><rect x="21.8" y="257" width="11.8" height="10.0" fill="rgb(220,92,48)" rx="2" ry="2" />
<text  x="24.80" y="265" ></text>
</g>
<g >
<title>proc_readdir_de (1 samples, 1.00%)</title><rect x="163.4" y="279" width="11.8" height="10.0" fill="rgb(237,222,44)" rx="2" ry="2" />
<text  x="166.40" y="287" ></text>
</g>
<g >
<title>neigh_timer_handler (1 samples, 1.00%)</title><rect x="364.0" y="301" width="11.8" height="10.0" fill="rgb(234,110,18)" rx="2" ry="2" />
<text  x="367.00" y="309" ></text>
</g>
<g >
<title>path_openat (1 samples, 1.00%)</title><rect x="175.2" y="301" width="11.8" height="10.0" fill="rgb(247,81,21)" rx="2" ry="2" />
<text  x="178.20" y="309" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 1.00%)</title><rect x="364.0" y="235" width="11.8" height="10.0" fill="rgb(239,186,16)" rx="2" ry="2" />
<text  x="367.00" y="243" ></text>
</g>
<g >
<title>__vfs_read (1 samples, 1.00%)</title><rect x="21.8" y="268" width="11.8" height="10.0" fill="rgb(247,40,44)" rx="2" ry="2" />
<text  x="24.80" y="276" ></text>
</g>
<g >
<title>link_path_walk.part.74 (1 samples, 1.00%)</title><rect x="175.2" y="290" width="11.8" height="10.0" fill="rgb(227,202,52)" rx="2" ry="2" />
<text  x="178.20" y="298" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 1.00%)</title><rect x="375.8" y="268" width="11.8" height="10.0" fill="rgb(205,126,27)" rx="2" ry="2" />
<text  x="378.80" y="276" ></text>
</g>
<g >
<title>el1_irq (27 samples, 27.00%)</title><rect x="836.0" y="356" width="318.6" height="10.0" fill="rgb(238,26,50)" rx="2" ry="2" />
<text  x="839.00" y="364" >el1_irq</text>
</g>
<g >
<title>__arm64_sys_read (1 samples, 1.00%)</title><rect x="21.8" y="301" width="11.8" height="10.0" fill="rgb(224,111,11)" rx="2" ry="2" />
<text  x="24.80" y="309" ></text>
</g>
<g >
<title>do_idle (66 samples, 66.00%)</title><rect x="387.6" y="378" width="778.8" height="10.0" fill="rgb(239,169,43)" rx="2" ry="2" />
<text  x="390.60" y="386" >do_idle</text>
</g>
</g>
</svg>
